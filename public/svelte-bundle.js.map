{"version":3,"file":"svelte-bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Button.svelte","../../src/Credits.svelte","../../src/globals.js","../../src/Load.svelte","../../src/IconLink.svelte","../../src/Help.svelte","../../src/IconSlot.svelte","../../src/routes.js","../../src/KeyMapping.svelte","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../src/PlayerConfig.svelte","../../src/Options.svelte","../../src/Pie.svelte","../../src/Localization.svelte","../../src/PageInProgress.svelte","../../src/Lobby.svelte","../../src/Multiplayer.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.53.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\r\n    export let text;\r\n    export let style;\r\n    export let iconPath;\r\n    export let isActive;\r\n    export let doLocalizeText = true;\r\n    let _class = \"\";\r\n    export { _class as class };\r\n</script>\r\n\r\n<button\r\n    class={`button-wrapper ${_class} ${isActive ? \"is-active\" : \"\"}`}\r\n    {style}\r\n    on:click\r\n    {...$$restProps}\r\n>\r\n    <div class=\"button-inner\">\r\n        {#if iconPath}<div\r\n                class=\"icon\"\r\n                style={`background-image: url('ui/icons/${iconPath}')`}\r\n            />{/if}\r\n        <span class=\"button-text\">\r\n            {doLocalizeText ? globalThis.i18n(text) : text}\r\n        </span>\r\n    </div>\r\n</button>\r\n\r\n<style>\r\n    .button-inner {\r\n        width: 100%;\r\n        height: 100%;\r\n        box-sizing: border-box;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: stretch;\r\n    }\r\n    .icon {\r\n        background-repeat: no-repeat;\r\n        background-size: cover; /* Make the image cover the div */\r\n        background-position: 50%; /* Center the image inside the div */\r\n        margin-right: 8px;\r\n    }\r\n    .button-text {\r\n        width: 100%;\r\n        white-space: nowrap;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    const credits = [\r\n        [\"Jordan O'Leary\", \"Game Design and Development\"],\r\n        [\"theBlurryBox\", \"Art and Animation\"],\r\n        [\"Valentin Cochet @coc_val\", \"Sound Effect Design\"],\r\n        [\"Jake O'Connell\", \"UI Design and Video Production\"],\r\n        [\"BananaMilk\", \"Music\"],\r\n        [\"Lost Lumens / Brad Clark\", \"Audio Mastering and Playtesting\"],\r\n        [\"Matt Sweda\", \"Brainstorming\"],\r\n        [\"Kacey Misskelley\", \"User Experience Research\"],\r\n        [\"Russell Champoux\", \"Playtesting\"],\r\n        [\"Rachel Bruhn\", \"Playtesting\"],\r\n        [\"Jakob Free\", \"Playtesting\"],\r\n        [\"Lochlan O'Leary\", \"Playtesting\"],\r\n        [\"https://www.kenney.nl/\", \"Some Icons\"],\r\n    ];\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside class=\"flex flex-direction-column gap-15 pad-20\">\r\n        <div class=\"flex align-items-center gap-20\">\r\n            <Button\r\n                on:click={() => window.goBack()}\r\n                type=\"button\"\r\n                text=\"🠔 Back\"\r\n                class=\"sm\"\r\n            />\r\n        </div>\r\n    </aside>\r\n    <main>\r\n        <div class=\"pad-20\">\r\n            <h2>Credits</h2>\r\n            <table>\r\n                <tbody>\r\n                    {#each credits as [name, did], i}\r\n                        <tr><td>{name}</td><td>{did}</td></tr>\r\n                    {/each}\r\n                </tbody>\r\n            </table>\r\n            <p>\r\n                And huge thanks to the many others unnamed above who were\r\n                helpful to me during the process of creating this game!\r\n            </p>\r\n            <h2>Inspiration</h2>\r\n            <p>\r\n                Spellmasons drew inspiration from a number of incredible indie\r\n                titles including: Nuclear Throne, Magicka, Into the Breach, and\r\n                Hoplite\r\n            </p>\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    div {\r\n        color: white;\r\n    }\r\n    /* Spacing between columns */\r\n    td {\r\n        padding-right: 15px;\r\n    }\r\n</style>\r\n","\r\nexport const SAVE_PREFIX = \"spellmasons-save-\";","<script>\r\n    import Button from \"./Button.svelte\";\r\n    import { SAVE_PREFIX } from \"./globals.js\";\r\n    let saveFiles = Object.keys(localStorage)\r\n        // Get all localStorage that are save files\r\n        .filter((x) => x.includes(SAVE_PREFIX))\r\n        // Get the name that doesn't include the save prefix\r\n        .map((x) => x.split(SAVE_PREFIX).join(\"\"))\r\n        // Have most recent at the top\r\n        .reverse();\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside>\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"flex align-items-center gap-20\">\r\n                <Button\r\n                    on:click={() => window.goBack()}\r\n                    type=\"button\"\r\n                    text=\"🠔 Back\"\r\n                    class=\"sm\"\r\n                />\r\n                <h1 class=\"options-title\">\r\n                    {globalThis.i18n(\"Previous Games\")}\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    </aside>\r\n\r\n    <main>\r\n        <div class=\"pad-20 flex flex-direction-column gap-15\">\r\n            {#each saveFiles as saveFile}\r\n                <div>\r\n                    <Button\r\n                        on:click={() => window.load(saveFile)}\r\n                        type=\"button\"\r\n                        text={saveFile}\r\n                    />\r\n                </div>\r\n            {/each}\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    aside {\r\n        border-right: 2px solid #efefef;\r\n        width: 300px;\r\n        /* Ensure that the options aside will become scrollable if the screen is too small */\r\n        overflow-y: auto;\r\n        /* Ensure it doesn't overlap with the border around the edges of the window */\r\n        max-height: 90vh;\r\n    }\r\n\r\n    .options-title {\r\n        display: inline-block;\r\n    }\r\n</style>\r\n","<script>\r\n    export let src;\r\n    export let alt;\r\n    export let href;\r\n    export let width;\r\n    export let isActive;\r\n    export let text = \"\";\r\n    let _class = \"\";\r\n    export { _class as class };\r\n</script>\r\n\r\n<a target=\"_blank\" rel=\"noreferrer\" {href}>\r\n    <button\r\n        class={`button-wrapper ${_class} ${isActive ? \"is-active\" : \"\"}`}\r\n        on:click\r\n        {...$$restProps}\r\n    >\r\n        <div>\r\n            <img {src} {width} {alt} />\r\n            <span>{text}</span>\r\n        </div>\r\n    </button>\r\n</a>\r\n\r\n<style lang=\"scss\">\r\n    button > div {\r\n        height: 24px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    import IconLink from \"./IconLink.svelte\";\r\n</script>\r\n\r\n<div class=\"flex height100\">\r\n    <aside>\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"flex align-items-center gap-20\">\r\n                <Button\r\n                    on:click={() => window.goBack()}\r\n                    type=\"button\"\r\n                    text=\"🠔 Back\"\r\n                    class=\"sm\"\r\n                />\r\n                <h1 class=\"options-title\">{globalThis.i18n(\"Help\")}</h1>\r\n            </div>\r\n            <div class=\"flex flex-direction-column gap-15\">\r\n                <!-- <Button\r\n                    on:click={() => setOptionsRoute(AUDIO)}\r\n                    isActive={optionsRoute == AUDIO}\r\n                    type=\"button\"\r\n                    text=\"Audio\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(PLAYER_CONFIG)}\r\n                    isActive={optionsRoute == PLAYER_CONFIG}\r\n                    type=\"button\"\r\n                    text=\"Player Configuration\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(CONTROLS)}\r\n                    isActive={optionsRoute == CONTROLS}\r\n                    type=\"button\"\r\n                    text=\"Controls\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(EXTRAS)}\r\n                    isActive={optionsRoute == EXTRAS}\r\n                    type=\"button\"\r\n                    text=\"Extras\"\r\n                /> -->\r\n            </div>\r\n        </div>\r\n    </aside>\r\n\r\n    <main>\r\n        <div class=\"flex gap-15 height100\">\r\n            <div\r\n                class=\"pad-20 flex flex-direction-column gap-15 overflowyscroll\"\r\n                style=\"min-width:300px\"\r\n            >\r\n                <h1>Contact Me!</h1>\r\n                <IconLink\r\n                    src=\"ui/UI_Bird.png\"\r\n                    alt=\"Twitter @spellmasons\"\r\n                    width=\"24px\"\r\n                    href=\"https://twitter.com/spellmasons\"\r\n                    class=\"button-wrapper-bg-2\"\r\n                    text=\"@spellmasons\"\r\n                />\r\n                <h1>Join our Discord Community!</h1>\r\n                <IconLink\r\n                    src=\"ui/discord_logo.png\"\r\n                    alt=\"Spellmasons Discord https://discord.gg/q6sUCreHeJ\"\r\n                    width=\"24px\"\r\n                    href=\"https://discord.gg/q6sUCreHeJ\"\r\n                    class=\"button-wrapper-bg-2\"\r\n                    text=\"Discord\"\r\n                />\r\n                <h1>How to</h1>\r\n                {#each window.explainKeys || [] as name}\r\n                    <Button\r\n                        on:click={() => window.menuExplain(name, true)}\r\n                        type=\"button\"\r\n                        text={name}\r\n                    />\r\n                {/each}\r\n                <!-- {#if optionsRoute == AUDIO}\r\n                <div class=\"flex flex-direction-column gap-15\">\r\n                    Total Volume:\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volume * 100}\r\n                        on:input={changeVolume}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                    Music Volume:\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volumeMusic * 100}\r\n                        on:input={changeVolumeMusic}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                    Sound Effects Volume:\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volumeGame * 100}\r\n                        on:input={changeVolumeGame}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                </div>\r\n            {:else if optionsRoute == PLAYER_CONFIG}\r\n                <PlayerConfig  />\r\n            {:else if optionsRoute == CONTROLS}\r\n                <KeyMapping />\r\n            {:else if optionsRoute == EXTRAS}\r\n                <div>\r\n                    <Button\r\n                        on:click={() => {\r\n                            window.monitorFPS();\r\n                        }}\r\n                        text=\"Toggle FPS/Latency Monitor\"\r\n                    />\r\n                </div>\r\n            {/if} -->\r\n            </div>\r\n            <div id=\"explain-portal\" />\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    aside {\r\n        border-right: 2px solid #efefef;\r\n        width: 300px;\r\n    }\r\n    .options-title {\r\n        display: inline-block;\r\n    }\r\n    #explain-portal {\r\n        width: 100%;\r\n        height: 100vh;\r\n        display: flex;\r\n        align-content: center;\r\n    }\r\n</style>\r\n","<script>\r\n    export let isActive;\r\n    export let align;\r\n    let _class = \"\";\r\n    export { _class as class };\r\n</script>\r\n\r\n<button\r\n    class={`button-wrapper ${_class} ${isActive ? \"is-active\" : \"\"} ${\r\n        align !== undefined ? align : \"\"\r\n    }`}\r\n    on:click\r\n    {...$$restProps}\r\n>\r\n    <div>\r\n        <slot />\r\n    </div>\r\n</button>\r\n\r\n<style lang=\"scss\">\r\n    button.left > div {\r\n        justify-content: flex-start;\r\n    }\r\n    button > div {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n</style>\r\n","export const OPTIONS = \"OPTIONS\";\r\nexport const LOAD_GAMES = \"LOAD\";\r\nexport const LOCALIZATION = \"LOCALIZATION\";\r\nexport const CREDITS = \"CREDITS\";\r\nexport const HELP = \"HELP\";\r\nexport const PLAY = \"PLAY\";\r\nexport const MULTIPLAYER_SERVER_CHOOSER = \"MULTIPLAYER_SERVER_CHOOSER\";\r\nexport const LANGUAGE = \"LANGUAGE\";\r\nexport const TODO = \"TODO\";","<script>\r\n    import { onMount, onDestroy } from \"svelte\";\r\n    function changeControl(key, index, code) {\r\n        globalThis.controlMap[activeKey][activeIndex] = code;\r\n        globalThis.persistControls();\r\n        forceRerender++;\r\n        // Clear active\r\n        setActive(\"\", 0);\r\n    }\r\n    function keydownListener(event) {\r\n        if (activeKey) {\r\n            if (globalThis.controlMap) {\r\n                changeControl(activeKey, activeIndex, event.code);\r\n            } else {\r\n                console.error(\"Cannot set key, no globalThis.controlMap\");\r\n            }\r\n        }\r\n    }\r\n    function mousedownListener(event) {\r\n        if (!globalThis.mouseButtonToKeyCode) {\r\n            console.error(\"mouseButtonToKeyCode is undefined\");\r\n        }\r\n        if (event.button !== undefined) {\r\n            const mouseButton = globalThis.mouseButtonToKeyCode(event.button);\r\n\r\n            if (activeKey) {\r\n                if (globalThis.controlMap) {\r\n                    if (\r\n                        event.button == 0 ||\r\n                        event.button == 1 ||\r\n                        event.button == 2\r\n                    ) {\r\n                        error = globalThis.i18n(\"mouseRebindError\");\r\n                    } else {\r\n                        changeControl(activeKey, activeIndex, mouseButton);\r\n                    }\r\n                } else {\r\n                    console.error(\"Cannot set key, no globalThis.controlMap\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onMount(() => {\r\n        document.body.addEventListener(\"keydown\", keydownListener);\r\n        document.body.addEventListener(\"mousedown\", mousedownListener);\r\n    });\r\n\r\n    onDestroy(() => {\r\n        document.body.removeEventListener(\"keydown\", keydownListener);\r\n        document.body.removeEventListener(\"mousedown\", mousedownListener);\r\n    });\r\n    let activeKey = \"\";\r\n    let activeIndex = 0;\r\n    // forceRerender is needed because this component edits a global variable which svelte stay in\r\n    // sync with like other variables\r\n    let forceRerender = 0;\r\n    function setActive(key, index) {\r\n        activeKey = key;\r\n        activeIndex = index;\r\n        // Reset error\r\n        error = \"\";\r\n    }\r\n    let error = \"\";\r\n</script>\r\n\r\n<h2 style=\"color:red;\">&nbsp;{error}</h2>\r\n<table id=\"keymapping\">\r\n    {#key forceRerender}\r\n        <tr>\r\n            <td />\r\n            <td>Option 1</td>\r\n            <td>Option 2</td>\r\n            <td>Option 3</td>\r\n        </tr>\r\n        {#each Object.entries(globalThis.controlMap || {}) as [key, controls]}\r\n            <tr>\r\n                <td>\r\n                    {globalThis.i18n(key)}\r\n                </td>\r\n                {#each Object.assign([\"\", \"\", \"\"], controls) as control, index}\r\n                    <td\r\n                        ><button\r\n                            class=\"reassignKey\"\r\n                            on:click={() => setActive(key, index)}\r\n                        >\r\n                            {#if activeKey == key && activeIndex == index}\r\n                                {globalThis.i18n(\"reassign\")}\r\n                            {:else}\r\n                                {(control || \"\")\r\n                                    .split(\"Key\")\r\n                                    .join(\"\")\r\n                                    .split(\"Digit\")\r\n                                    .join(\"\")\r\n                                    .toLowerCase()}\r\n                            {/if}\r\n                        </button></td\r\n                    >\r\n                {/each}\r\n            </tr>\r\n        {/each}\r\n    {/key}\r\n</table>\r\n\r\n<style>\r\n    .reassignKey {\r\n        min-width: 200px;\r\n        min-height: 24px;\r\n    }\r\n</style>\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\r\n\r\nexport const lobbyPlayerList = writable([]);\r\nexport const connected = writable(false);\r\nexport const isInRoom = writable(false);\r\nexport const isConnecting = writable(false);\r\nexport function syncConnectedWithPieState() {\r\n    const _connected = window.isConnected()\r\n    connected.set(_connected);\r\n    if (!_connected) {\r\n        isInRoom.set(false);\r\n    }\r\n    isConnecting.set(false);\r\n}\r\nexport function disconnect() {\r\n    return window.pieDisconnect().then(syncConnectedWithPieState);\r\n}","<script>\r\n    import { onMount } from \"svelte\";\r\n    import { lobbyPlayerList } from \"./stores\";\r\n    // storage ids from config.ts in Golems\r\n    let name = globalThis.storageGet(\"player-name\");\r\n    let color = `#${parseInt(globalThis.storageGet(\"player-color\")).toString(\r\n        16\r\n    )}`;\r\n    let colorMagic = `#${parseInt(\r\n        globalThis.storageGet(\"player-color\")\r\n    ).toString(16)}`;\r\n    const convertToHex = (cssColor) => parseInt(cssColor.slice(1), 16);\r\n    function sendConfig(color, colorMagic, name) {\r\n        window.configPlayer({\r\n            color: convertToHex(color),\r\n            colorMagic: convertToHex(colorMagic),\r\n            name,\r\n        });\r\n        // Update lobbyPlayerList\r\n        $lobbyPlayerList = globalThis.lobbyPlayerList;\r\n    }\r\n    onMount(() => {\r\n        // Temporary work around, since all self messages are handled immediately,\r\n        // the config is being overwritten when underworld sends SYNC_PLAYERS due to\r\n        // onClientConnected even tho this messages is processed after so I'm adding\r\n        // a delay; however, the real solution is to update wsPie to add a flag that\r\n        // says sendToSelfThroughServer so it doesn't handle it immediately\r\n        setTimeout(() => {\r\n            sendConfig(color, colorMagic, name);\r\n        }, 200);\r\n    });\r\n</script>\r\n\r\n<div class=\"flex gap-15\">\r\n    <div class=\"flex flex-direction-column gap-15\">\r\n        <label for=\"player-name\">{globalThis.i18n(\"Player Name\")}</label>\r\n        <input\r\n            type=\"text\"\r\n            name=\"player-name\"\r\n            bind:value={name}\r\n            on:input={() => {\r\n                sendConfig(color, colorMagic, name);\r\n            }}\r\n        />\r\n    </div>\r\n    <div class=\"flex flex-direction-column gap-15\">\r\n        <label for=\"robe\">{globalThis.i18n(\"Robe Color\")}</label>\r\n        <input\r\n            type=\"color\"\r\n            name=\"robe\"\r\n            bind:value={color}\r\n            on:blur={() => {\r\n                sendConfig(color, colorMagic, name);\r\n            }}\r\n        />\r\n    </div>\r\n    <!-- <div class=\"flex flex-direction-column gap-15\">\r\n        <label for=\"magic color\">{globalThis.i18n(\"Magic Color\")}</label>\r\n        <input\r\n            type=\"color\"\r\n            name=\"magic color\"\r\n            bind:value={colorMagic}\r\n            on:blur={() => {\r\n                sendConfig(color, colorMagic, name);\r\n            }}\r\n        />\r\n    </div> -->\r\n</div>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    import Icon from \"./IconSlot.svelte\";\r\n    export let setRoute;\r\n    import { LOCALIZATION } from \"./routes\";\r\n    import KeyMapping from \"./KeyMapping.svelte\";\r\n    const CONTROLS = \"KEY_MAPPING\";\r\n    const EXTRAS = \"EXTRAS\";\r\n    import PlayerConfig from \"./PlayerConfig.svelte\";\r\n    const PLAYER_CONFIG = \"PLAYER_CONFIG\";\r\n\r\n    const AUDIO = \"AUDIO\";\r\n    const VIDEO = \"VIDEO\";\r\n    let optionsRoute = AUDIO;\r\n    function setOptionsRoute(_optionsRoute) {\r\n        optionsRoute = _optionsRoute;\r\n    }\r\n    function changeVolume(ev) {\r\n        window.changeVolume(ev.target.value / 100);\r\n    }\r\n    function changeVolumeMusic(ev) {\r\n        window.changeVolumeMusic(ev.target.value / 100);\r\n    }\r\n    function changeVolumeGame(ev) {\r\n        window.changeVolumeGame(ev.target.value / 100);\r\n    }\r\n    let cinematicCameraEnabled = globalThis.cinematicCameraEnabled;\r\n    function setCinematicCamera(ev) {\r\n        globalThis.setCinematicCameraEnabled(ev.target.checked);\r\n        cinematicCameraEnabled = globalThis.cinematicCameraEnabled;\r\n    }\r\n    let storedZoom = NaN;\r\n    if (globalThis.STORAGE_ID_UI_ZOOM) {\r\n        storedZoom = parseFloat(\r\n            globalThis.storageGet(globalThis.STORAGE_ID_UI_ZOOM)\r\n        );\r\n    } else {\r\n        console.error(\"globalThis.STORAGE_ID_UI_ZOOM is undefined\");\r\n    }\r\n    let zoomAmount = isNaN(storedZoom) ? 1 : storedZoom;\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside>\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"flex align-items-center gap-20\">\r\n                <Button\r\n                    on:click={() => window.goBack()}\r\n                    type=\"button\"\r\n                    text=\"🠔 Back\"\r\n                    class=\"sm\"\r\n                />\r\n                <h1 class=\"options-title\">{globalThis.i18n(\"Settings\")}</h1>\r\n            </div>\r\n            <div class=\"flex flex-direction-column gap-15\">\r\n                <Button\r\n                    on:click={() => setOptionsRoute(AUDIO)}\r\n                    isActive={optionsRoute == AUDIO}\r\n                    type=\"button\"\r\n                    text={`🔊 ${globalThis.i18n(\"Audio\")}`}\r\n                    style=\"text-align:left\"\r\n                    doLocalizeText={false}\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(VIDEO)}\r\n                    isActive={optionsRoute == VIDEO}\r\n                    type=\"button\"\r\n                    text={`🖥️ ${globalThis.i18n(\"Video\")}`}\r\n                    style=\"text-align:left\"\r\n                    doLocalizeText={false}\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(PLAYER_CONFIG)}\r\n                    isActive={optionsRoute == PLAYER_CONFIG}\r\n                    type=\"button\"\r\n                    text={`🧙 ${globalThis.i18n(\"Player\")}`}\r\n                    style=\"text-align:left\"\r\n                    doLocalizeText={false}\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(CONTROLS)}\r\n                    isActive={optionsRoute == CONTROLS}\r\n                    type=\"button\"\r\n                    text={`⌨️ ${globalThis.i18n(\"Controls\")}`}\r\n                    style=\"text-align:left\"\r\n                    doLocalizeText={false}\r\n                />\r\n                {#if globalThis.skipTutorial && globalThis.isTutorialComplete !== undefined && !globalThis.isTutorialComplete()}\r\n                    <Button\r\n                        on:click={() => {\r\n                            globalThis.skipTutorial();\r\n                        }}\r\n                        text=\"Skip Tutorial\"\r\n                        style=\"text-align:left\"\r\n                    />\r\n                {/if}\r\n                <Button\r\n                    on:click={() => globalThis.resetTutorial()}\r\n                    type=\"button\"\r\n                    text={`❓ ${globalThis.i18n(\"Reset Tutorial\")}`}\r\n                    style=\"text-align:left\"\r\n                    doLocalizeText={false}\r\n                />\r\n                <Icon\r\n                    on:click={() => {\r\n                        setRoute(LOCALIZATION);\r\n                    }}\r\n                    class=\"button-wrapper-bg-2\"\r\n                    align=\"left\"\r\n                >\r\n                    <img\r\n                        src=\"ui/localizationIcon.png\"\r\n                        alt=\"language options\"\r\n                        width=\"24\"\r\n                        height=\"24\"\r\n                        style=\"transform: scale(1.4);\"\r\n                    />\r\n                    &nbsp; &nbsp;\r\n                    {globalThis.i18n(\"Language\")}\r\n                </Icon>\r\n            </div>\r\n        </div>\r\n        <button\r\n            id=\"devSettings\"\r\n            on:click={() => setOptionsRoute(EXTRAS)}\r\n            isActive={optionsRoute == EXTRAS}\r\n            type=\"button\">Developer Settings</button\r\n        >\r\n    </aside>\r\n\r\n    <main>\r\n        <div class=\"pad-20\">\r\n            {#if optionsRoute == AUDIO}\r\n                <div class=\"flex flex-direction-column gap-15\">\r\n                    {globalThis.i18n(\"Total Volume\")}\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volume * 100}\r\n                        on:input={changeVolume}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                    {globalThis.i18n(\"Music Volume\")}\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volumeMusic * 100}\r\n                        on:input={changeVolumeMusic}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                    {globalThis.i18n(\"Sound Effects Volume\")}\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volumeGame * 100}\r\n                        on:input={changeVolumeGame}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                    <Button\r\n                        on:click={() => window.playNextSong()}\r\n                        text=\"Play next song\"\r\n                    />\r\n                </div>\r\n            {:else if optionsRoute == VIDEO}\r\n                <div class=\"flex flex-direction-column gap-15\">\r\n                    <Button\r\n                        on:click={() => {\r\n                            if (globalThis.isElectron) {\r\n                                globalThis.electronSettings.setFullscreen(true);\r\n                            } else {\r\n                                document.body\r\n                                    .requestFullscreen()\r\n                                    .catch((err) => {\r\n                                        console.error(\r\n                                            `Error attempting to enable fullscreen mode: ${err.message} (${err.name})`\r\n                                        );\r\n                                    });\r\n                            }\r\n                        }}\r\n                        text=\"Set Fullscreen\"\r\n                    />\r\n                    <Button\r\n                        on:click={() => {\r\n                            if (globalThis.isElectron) {\r\n                                globalThis.electronSettings.setFullscreen(\r\n                                    false\r\n                                );\r\n                            } else {\r\n                                document.exitFullscreen();\r\n                            }\r\n                        }}\r\n                        text=\"Set Windowed Mode\"\r\n                    />\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            bind:checked={cinematicCameraEnabled}\r\n                            on:click={setCinematicCamera}\r\n                        />\r\n                        {globalThis.i18n(\"Enable Cinematic Camera\")}\r\n                    </label>\r\n                    {#if globalThis.isElectron}\r\n                        {globalThis.i18n(\"UI Scale\")}: {zoomAmount}\r\n                        <div class=\"flex gap-15\">\r\n                            <Button\r\n                                on:click={() => {\r\n                                    zoomAmount -= 0.1;\r\n                                    // Round to 1 decimal point to protect against floating point errors\r\n                                    zoomAmount =\r\n                                        Math.round(zoomAmount * 10) / 10;\r\n                                    globalThis.storageSet(\r\n                                        globalThis.STORAGE_ID_UI_ZOOM,\r\n                                        zoomAmount\r\n                                    );\r\n                                    globalThis.electronSettings.setUIZoom(\r\n                                        zoomAmount\r\n                                    );\r\n                                }}\r\n                                text=\"Smaller\"\r\n                            />\r\n                            <Button\r\n                                on:click={() => {\r\n                                    zoomAmount += 0.1;\r\n                                    // Round to 1 decimal point to protect against floating point errors\r\n                                    zoomAmount =\r\n                                        Math.round(zoomAmount * 10) / 10;\r\n                                    globalThis.storageSet(\r\n                                        globalThis.STORAGE_ID_UI_ZOOM,\r\n                                        zoomAmount\r\n                                    );\r\n                                    globalThis.electronSettings.setUIZoom(\r\n                                        zoomAmount\r\n                                    );\r\n                                }}\r\n                                text=\"Bigger\"\r\n                            />\r\n                        </div>\r\n                    {/if}\r\n                </div>\r\n            {:else if optionsRoute == PLAYER_CONFIG}\r\n                <PlayerConfig />\r\n            {:else if optionsRoute == CONTROLS}\r\n                <KeyMapping />\r\n            {:else if optionsRoute == EXTRAS}\r\n                <div class=\"flex flex-direction-column gap-15\">\r\n                    <Button\r\n                        on:click={() => {\r\n                            window.monitorFPS();\r\n                        }}\r\n                        text=\"Toggle FPS / Latency Monitor\"\r\n                    />\r\n                    <Button\r\n                        on:click={() => {\r\n                            window.electronSettings.toggleDevTools();\r\n                        }}\r\n                        text=\"Toggle Console\"\r\n                    />\r\n                </div>\r\n            {/if}\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    #devSettings {\r\n        position: absolute;\r\n        bottom: 28px;\r\n        left: 28px;\r\n        background: none;\r\n        border: none;\r\n        padding: 0;\r\n        font: inherit;\r\n        cursor: pointer;\r\n        color: #262626;\r\n        outline: inherit;\r\n    }\r\n    aside {\r\n        border-right: 2px solid #efefef;\r\n        width: 300px;\r\n        /* Ensure that the options aside will become scrollable if the screen is too small */\r\n        overflow-y: auto;\r\n        /* Ensure it doesn't overlap with the border around the edges of the window */\r\n        max-height: 90vh;\r\n    }\r\n\r\n    .options-title {\r\n        display: inline-block;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    import Icon from \"./IconSlot.svelte\";\r\n    import IconLink from \"./IconLink.svelte\";\r\n    import {\r\n        HELP,\r\n        CREDITS,\r\n        OPTIONS,\r\n        MULTIPLAYER_SERVER_CHOOSER,\r\n        LOCALIZATION,\r\n        LOAD_GAMES,\r\n    } from \"./routes\";\r\n    import {\r\n        syncConnectedWithPieState,\r\n        disconnect,\r\n        connected,\r\n        isInRoom,\r\n    } from \"./stores\";\r\n    import { SAVE_PREFIX } from \"./globals.js\";\r\n    export let setRoute;\r\n    export let inGame;\r\n    if (globalThis.STORAGE_ID_UI_ZOOM) {\r\n        // Restore ui zoom from storage\r\n        const storedZoom = parseFloat(\r\n            globalThis.storageGet(globalThis.STORAGE_ID_UI_ZOOM)\r\n        );\r\n        if (storedZoom) {\r\n            globalThis.electronSettings.setUIZoom(storedZoom);\r\n        }\r\n    } else {\r\n        console.error(\"globalThis.STORAGE_ID_UI_ZOOM is undefined\");\r\n    }\r\n    function isConnectedToSinglePlayer() {\r\n        // 'solomode_client_id' comes from pieclient's solo mode\r\n        return globalThis.clientId == \"solomode_client_id\";\r\n    }\r\n    function chooseSingleplayer() {\r\n        // Start music on button click to get past Firefox permissions\r\n        window.playMusic();\r\n        // Connect to solo\r\n        window.startSingleplayer().then(() => {\r\n            syncConnectedWithPieState();\r\n        });\r\n    }\r\n    function chooseMultiplayer() {\r\n        // Start music on button click to get past Firefox permissions\r\n        window.playMusic();\r\n        if (isConnectedToSinglePlayer()) {\r\n            disconnect();\r\n        }\r\n        setRoute(MULTIPLAYER_SERVER_CHOOSER);\r\n    }\r\n\r\n    function exitGame() {\r\n        const doQuit = confirm(\"Are you sure you want to quit to Main Menu?\");\r\n        if (doQuit) {\r\n            // Clear game and pieUrl searchParams on quit\r\n            const url = new URL(location.href);\r\n            url.searchParams.delete(\"game\");\r\n            url.searchParams.delete(\"pieUrl\");\r\n            window.history.pushState(null, null, url);\r\n            window.exitCurrentGame().then(syncConnectedWithPieState);\r\n        }\r\n    }\r\n    function resumeGame() {\r\n        window.closeMenu();\r\n    }\r\n    function doSave() {\r\n        const saveName = prompt(i18n(\"Enter a name for the saved game\"));\r\n        if (saveName) {\r\n            if (localStorage.getItem(SAVE_PREFIX + saveName)) {\r\n                const doOverwrite = confirm(\r\n                    i18n(\r\n                        \"A save file with this name already exists.  Are you sure you want to overwrite it?\"\r\n                    )\r\n                );\r\n                if (!doOverwrite) {\r\n                    return;\r\n                }\r\n            }\r\n            window.save(saveName);\r\n            alert(\"Game saved!\");\r\n        }\r\n    }\r\n    const quicksave_exists = !!globalThis.storageGet(\r\n        `${globalThis.savePrefix}${globalThis.quicksaveKey}`\r\n    );\r\n    // function saveGame() {\r\n    //     const fileName = prompt(\"Name your save file\");\r\n    //     console.log(\"saving...\", fileName);\r\n    //     window.save(fileName);\r\n    // }\r\n    // Since globalThis.isTutorialComplete is outside of the svelte\r\n    // context, we have to forceRerender the tutorialSkip button after\r\n    // it is pressed so it will recheck isTutorialComplete to decide\r\n    // if it should render or not.\r\n    let forceRerenderTutorialSkip = 0;\r\n</script>\r\n\r\n<div id=\"corner-left\" class=\"flex gap\" style=\"flex-direction:column;\">\r\n    <Button\r\n        on:click={() => setRoute(HELP)}\r\n        text=\"Help\"\r\n        iconPath=\"question.png\"\r\n    />\r\n</div>\r\n<div id=\"corner\" class=\"flex gap\" style=\"flex-direction:column;\">\r\n    <Button on:click={() => setRoute(CREDITS)} text=\"Credits\" />\r\n    <div class=\"flex gap\">\r\n        <IconLink\r\n            src=\"ui/UI_Bird.png\"\r\n            alt=\"Twitter @spellmasons\"\r\n            width=\"24px\"\r\n            href=\"https://twitter.com/spellmasons\"\r\n            class=\"button-wrapper-bg-2\"\r\n        />\r\n        <IconLink\r\n            src=\"ui/discord_logo.png\"\r\n            alt=\"Spellmasons Discord https://discord.gg/q6sUCreHeJ\"\r\n            width=\"24px\"\r\n            href=\"https://discord.gg/q6sUCreHeJ\"\r\n            class=\"button-wrapper-bg-2\"\r\n        />\r\n        <Icon\r\n            on:click={() => {\r\n                setRoute(LOCALIZATION);\r\n            }}\r\n            class=\"button-wrapper-bg-2\"\r\n        >\r\n            <img\r\n                src=\"ui/localizationIcon.png\"\r\n                alt=\"language options\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                style=\"transform: scale(1.4);\"\r\n            />\r\n        </Icon>\r\n        <!-- <Icon src=\"ui/UI_Bug.png\" alt=\"Report Issue or Bug\" /> -->\r\n    </div>\r\n</div>\r\n\r\n{#if inGame}\r\n    <div class=\"list\">\r\n        {#if $connected && $isInRoom && !globalThis.player.lobbyReady}\r\n            <!--\r\n                Handle special case where if the player has joined a game\r\n                but is still in the lobby because they haven't readied up yet, resumeGame\r\n                will do nothing because they cannot close the menu yet, so there must be a button\r\n                to bring them back to the lobby\r\n            -->\r\n            <Button\r\n                on:click={() => {\r\n                    setRoute(MULTIPLAYER_SERVER_CHOOSER);\r\n                }}\r\n                text=\"Back to Lobby\"\r\n            />\r\n        {:else}\r\n            <Button\r\n                on:click={resumeGame}\r\n                text=\"Resume Game\"\r\n                iconPath=\"forward.png\"\r\n            />\r\n            <!-- Only show save/load buttons in singleplayer until I implement support for saving multiplayer games -->\r\n            {#if isConnectedToSinglePlayer()}\r\n                <Button on:click={doSave} text=\"Save\" iconPath=\"save.png\" />\r\n            {/if}\r\n        {/if}\r\n        {#key forceRerenderTutorialSkip}\r\n            {#if globalThis.skipTutorial && globalThis.isTutorialComplete !== undefined && !globalThis.isTutorialComplete()}\r\n                <Button\r\n                    on:click={() => {\r\n                        globalThis.skipTutorial();\r\n                        forceRerenderTutorialSkip++;\r\n                    }}\r\n                    text=\"Skip Tutorial\"\r\n                />\r\n            {/if}\r\n        {/key}\r\n        <!-- Only show save/load buttons in singleplayer until I implement support for saving multiplayer games -->\r\n        {#if isConnectedToSinglePlayer()}\r\n            <Button\r\n                on:click={() => setRoute(LOAD_GAMES)}\r\n                text=\"Load\"\r\n                iconPath=\"open.png\"\r\n            />\r\n        {/if}\r\n        <Button\r\n            on:click={() => setRoute(OPTIONS)}\r\n            text=\"Settings\"\r\n            iconPath=\"gear.png\"\r\n        />\r\n        <Button\r\n            on:click={exitGame}\r\n            text=\"Quit to Main Menu\"\r\n            iconPath=\"exitLeft.png\"\r\n        />\r\n    </div>\r\n{:else}\r\n    {#await window.setupPixiPromise}\r\n        loading assets...\r\n    {:then}\r\n        <div class=\"list\">\r\n            {#if quicksave_exists}\r\n                <Button\r\n                    on:click={() => {\r\n                        globalThis.load(globalThis.quicksaveKey);\r\n                    }}\r\n                    text=\"Resume Last Run\"\r\n                    iconPath=\"forward.png\"\r\n                />\r\n            {/if}\r\n            <Button\r\n                on:click={chooseSingleplayer}\r\n                text=\"New Run\"\r\n                iconPath=\"singleplayer.png\"\r\n            />\r\n            <Button\r\n                on:click={chooseMultiplayer}\r\n                text=\"Multiplayer\"\r\n                iconPath=\"massiveMultiplayer.png\"\r\n            />\r\n            <Button\r\n                on:click={() => setRoute(LOAD_GAMES)}\r\n                text=\"Load\"\r\n                iconPath=\"open.png\"\r\n            />\r\n            <Button\r\n                on:click={() => setRoute(OPTIONS)}\r\n                text=\"Settings\"\r\n                iconPath=\"gear.png\"\r\n            />\r\n            {#if globalThis.isElectron}\r\n                <Button\r\n                    on:click={() => {\r\n                        window.fullyExitGame();\r\n                    }}\r\n                    text=\"Quit Game\"\r\n                    iconPath=\"door.png\"\r\n                />\r\n            {/if}\r\n        </div>\r\n        <br />\r\n    {:catch}\r\n        <p style=\"color: red\">Something went wrong loading assets</p>\r\n    {/await}\r\n{/if}\r\n\r\n<style>\r\n    #corner {\r\n        position: absolute;\r\n        bottom: 22px;\r\n        right: 24px;\r\n    }\r\n    #corner-left {\r\n        position: absolute;\r\n        bottom: 22px;\r\n        left: 24px;\r\n    }\r\n    .gap {\r\n        gap: 15px;\r\n    }\r\n    .list {\r\n        display: flex;\r\n        flex-direction: column;\r\n        max-width: 200px;\r\n        margin: 0 auto;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    export const languages = globalThis.getSupportedLanguages();\r\n    let currentLanguageCode = globalThis.getChosenLanguageCode();\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside>\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"flex align-items-center gap-20\">\r\n                <Button\r\n                    on:click={() => window.goBack()}\r\n                    type=\"button\"\r\n                    text=\"🠔 Back\"\r\n                    class=\"sm\"\r\n                />\r\n                <h1 class=\"options-title\">{globalThis.i18n(\"Localization\")}</h1>\r\n            </div>\r\n        </div>\r\n    </aside>\r\n\r\n    <main>\r\n        <div class=\"pad-20 flex flex-direction-column gap-15\">\r\n            {#each languages as { language, code }, i}\r\n                <Button\r\n                    text={language}\r\n                    isActive={currentLanguageCode == code}\r\n                    doLocalizeText={false}\r\n                    on:click={() => {\r\n                        globalThis.setLanguage(code, true);\r\n                        currentLanguageCode = code;\r\n                        window.goBack();\r\n                    }}\r\n                />\r\n            {/each}\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    aside {\r\n        border-right: 2px solid #efefef;\r\n        width: 300px;\r\n    }\r\n    .options-title {\r\n        display: inline-block;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n</script>\r\n\r\n<h1>This page is still being built</h1>\r\n\r\n<Button\r\n    on:click={() => window.goBack()}\r\n    type=\"button\"\r\n    text=\"🠔 Back\"\r\n    class=\"sm\"\r\n/>\r\n\r\n<style>\r\n    h1 {\r\n        color: white;\r\n    }\r\n</style>\r\n","<script>\r\n    import { onMount, onDestroy } from \"svelte\";\r\n    import Button from \"./Button.svelte\";\r\n    import PlayerConfig from \"./PlayerConfig.svelte\";\r\n    import { lobbyPlayerList } from \"./stores\";\r\n    let intervalId;\r\n    onMount(() => {\r\n        setInterval(() => {\r\n            // Update lobbyPlayerList\r\n            $lobbyPlayerList = globalThis.lobbyPlayerList;\r\n        }, 500);\r\n    });\r\n    onDestroy(() => {\r\n        clearInterval(intervalId);\r\n    });\r\n</script>\r\n\r\n<h1>{globalThis.i18n(\"Game Lobby\")}</h1>\r\n<PlayerConfig />\r\n<Button\r\n    on:click={() => {\r\n        globalThis.configPlayer({ lobbyReady: true });\r\n    }}\r\n    type=\"button\"\r\n    text=\"Ready\"\r\n    class=\"sm\"\r\n/>\r\n<table id=\"lobby-player-list\">\r\n    <thead>\r\n        <tr />\r\n    </thead>\r\n    <tbody>\r\n        {#each $lobbyPlayerList as { name, status, color, ready }}\r\n            <tr>\r\n                <td>{name}</td>\r\n                <td>{status}</td>\r\n                <td\r\n                    class=\"lobby-player-color\"\r\n                    style={`background-color:${color};`}\r\n                />\r\n                <td>\r\n                    {ready}\r\n                </td>\r\n            </tr>\r\n        {/each}\r\n    </tbody>\r\n</table>\r\n\r\n<style>\r\n    #lobby-player-list {\r\n        min-width: 500px;\r\n    }\r\n    .lobby-player-color {\r\n        width: 20px;\r\n        height: 18px;\r\n    }\r\n</style>\r\n","<script>\r\n    import { onMount } from \"svelte\";\r\n    import { get } from \"svelte/store\";\r\n    import Button from \"./Button.svelte\";\r\n    import Lobby from \"./Lobby.svelte\";\r\n    import {\r\n        isInRoom,\r\n        isConnecting,\r\n        connected,\r\n        syncConnectedWithPieState,\r\n        disconnect,\r\n    } from \"./stores\";\r\n    let isJoining = false;\r\n    let urlSearchParams = new URLSearchParams(location.search);\r\n    let wsUrl = urlSearchParams.get(\"pieUrl\");\r\n    let gameName = urlSearchParams.get(\"game\");\r\n    let joinRoomErrorText = \"\";\r\n\r\n    function connect() {\r\n        if (wsUrl) {\r\n            console.log(\"Menu: Connect to server\", wsUrl);\r\n            $isConnecting = true;\r\n            const url = new URL(location.href);\r\n            url.searchParams.set(\"pieUrl\", wsUrl);\r\n            window.history.pushState(null, null, url);\r\n            return window\r\n                .connect_to_wsPie_server(wsUrl)\r\n                .catch(console.error)\r\n                .then(syncConnectedWithPieState);\r\n        }\r\n        return Promise.reject(\"No wsUrl defined to connect to\");\r\n    }\r\n    function leaveRoom() {\r\n        window.pieLeaveRoom();\r\n        $isInRoom = false;\r\n    }\r\n    function join() {\r\n        if (gameName) {\r\n            if (window.isConnected()) {\r\n                // Note: Must not join a room until pixi is setup\r\n                console.log(\"Menu: Connect to game name\", gameName);\r\n                // Now that we are both connected to the pieServer and assets are loaded,\r\n                // we can host or join a game\r\n                isJoining = true;\r\n                // Reset error\r\n                joinRoomErrorText = \"\";\r\n                // TODO: differentiate making room and joining room\r\n                window\r\n                    .joinRoom({ name: gameName })\r\n                    .then(() => {\r\n                        const url = new URL(location.href);\r\n                        url.searchParams.set(\"game\", gameName);\r\n                        window.history.pushState(null, null, url);\r\n                        $isInRoom = true;\r\n                    })\r\n                    .catch((e) => {\r\n                        console.error(\"Could not join room\", e);\r\n                        joinRoomErrorText = e;\r\n                    })\r\n                    .then(() => {\r\n                        isJoining = false;\r\n                    });\r\n            } else {\r\n                console.error(\r\n                    \"Cannot join room until pieClient is connected to a pieServer\"\r\n                );\r\n            }\r\n        } else {\r\n            console.log(\"Cannot join game until a gameName is provided\");\r\n        }\r\n    }\r\n    onMount(() => {\r\n        syncConnectedWithPieState();\r\n    });\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside>\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"flex align-items-center gap-20\">\r\n                <Button\r\n                    on:click={() => {\r\n                        window.goBack();\r\n                    }}\r\n                    type=\"button\"\r\n                    text=\"🠔 Back\"\r\n                    class=\"sm\"\r\n                />\r\n                <h1 class=\"options-title\">{globalThis.i18n(\"Multiplayer\")}</h1>\r\n            </div>\r\n        </div>\r\n    </aside>\r\n\r\n    <main>\r\n        <div class=\"pad-20\" style=\"min-width:400px;\">\r\n            {globalThis.i18n(\"Server Url\")}\r\n            <div>\r\n                <input\r\n                    bind:value={wsUrl}\r\n                    on:keypress={(e) => {\r\n                        e.key == \"Enter\" && connect();\r\n                    }}\r\n                />\r\n                <div class=\"flex gap-15\">\r\n                    <Button\r\n                        on:click={connect}\r\n                        disabled={$connected}\r\n                        text=\"Connect\"\r\n                    />\r\n                    <Button\r\n                        on:click={disconnect}\r\n                        disabled={!$connected}\r\n                        text=\"Disconnect\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            {#if $isConnecting}\r\n                Connecting...\r\n                <div class=\"lds-ellipsis\">\r\n                    <div />\r\n                    <div />\r\n                    <div />\r\n                    <div />\r\n                </div>\r\n            {/if}\r\n            {#if $connected}\r\n                <p>{globalThis.i18n(\"Game name\")}</p>\r\n                <input\r\n                    bind:value={gameName}\r\n                    on:keypress={(e) => {\r\n                        e.key == \"Enter\" && join();\r\n                    }}\r\n                />\r\n                {#if isJoining}\r\n                    Joining...\r\n                    <div class=\"lds-ellipsis\">\r\n                        <div />\r\n                        <div />\r\n                        <div />\r\n                        <div />\r\n                    </div>\r\n                {:else if $isInRoom}\r\n                    <Button on:click={leaveRoom} text=\"Leave Room\" />\r\n                {:else}\r\n                    <div class=\"flex gap-15\">\r\n                        <Button on:click={join} text=\"Host\" />\r\n                        <Button on:click={join} text=\"Join\" />\r\n                    </div>\r\n                    <div style=\"color:red;\">{joinRoomErrorText}</div>\r\n                {/if}\r\n            {/if}\r\n            {#if $isInRoom}\r\n                <Lobby />\r\n            {/if}\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    input {\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        -webkit-padding: 0.4em 0;\r\n        padding: 0.4em;\r\n        margin: 0 0 0.5em 0;\r\n        box-sizing: border-box;\r\n        border: 1px solid #ccc;\r\n        border-radius: 2px;\r\n        width: 100%;\r\n    }\r\n    .lds-ellipsis {\r\n        display: inline-block;\r\n        position: relative;\r\n        width: 80px;\r\n        height: 80px;\r\n    }\r\n    .lds-ellipsis div {\r\n        position: absolute;\r\n        top: 33px;\r\n        width: 13px;\r\n        height: 13px;\r\n        border-radius: 50%;\r\n        background: #fff;\r\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n    }\r\n    .lds-ellipsis div:nth-child(1) {\r\n        left: 8px;\r\n        animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n    .lds-ellipsis div:nth-child(2) {\r\n        left: 8px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    .lds-ellipsis div:nth-child(3) {\r\n        left: 32px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    .lds-ellipsis div:nth-child(4) {\r\n        left: 56px;\r\n        animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n    @keyframes lds-ellipsis1 {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis3 {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n        100% {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis2 {\r\n        0% {\r\n            transform: translate(0, 0);\r\n        }\r\n        100% {\r\n            transform: translate(24px, 0);\r\n        }\r\n    }\r\n</style>\r\n","<script>\r\n  console.log(\"Menu: Svelte menu is running\");\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import Credits from \"./Credits.svelte\";\r\n  import Load from \"./Load.svelte\";\r\n  import Help from \"./Help.svelte\";\r\n  import Options from \"./Options.svelte\";\r\n  import Pie from \"./Pie.svelte\";\r\n  import Localization from \"./Localization.svelte\";\r\n  import PageInProgress from \"./PageInProgress.svelte\";\r\n  import {\r\n    PLAY,\r\n    OPTIONS,\r\n    CREDITS,\r\n    HELP,\r\n    TODO,\r\n    LOCALIZATION,\r\n    MULTIPLAYER_SERVER_CHOOSER,\r\n    LOAD_GAMES,\r\n  } from \"./routes\";\r\n  import Multiplayer from \"./Multiplayer.svelte\";\r\n  let route;\r\n  let inGame = false;\r\n  let forceRerender = 0;\r\n  // Used when changing the language to ensure the menu\r\n  // updates to the new language\r\n  window.refreshMenu = () => {\r\n    console.log(\"Force refresh menu\");\r\n    forceRerender++;\r\n  };\r\n  window.updateInGameMenuStatus = () => {\r\n    inGame = window.player !== undefined;\r\n  };\r\n  setRoute(PLAY);\r\n  function setRoute(r) {\r\n    console.log(\"Menu: Route:\", r);\r\n    route = r;\r\n    window.updateInGameMenuStatus();\r\n  }\r\n  window.goBack = function goBack() {\r\n    setRoute(PLAY);\r\n  };\r\n  function keydownListener(event) {\r\n    switch (event.code) {\r\n      case \"Escape\":\r\n        goBack();\r\n        break;\r\n    }\r\n  }\r\n\r\n  let updateProgress = 0;\r\n  // Start with updateComplete set to true so that the update UI will\r\n  // ONLY EVER hide the play ui if update messages start coming through\r\n  let updateComplete = true;\r\n  onMount(() => {\r\n    document.body.addEventListener(\"keydown\", keydownListener);\r\n\r\n    if (globalThis.isElectron) {\r\n      if (globalThis.update) {\r\n        console.log(\"Register to receive Update events.\");\r\n        globalThis.update.onUpdateCounter((_sender, updateState) => {\r\n          console.log(\"Electron app update:\", updateState);\r\n          if (updateState.progress !== undefined) {\r\n            updateProgress = updateState.progress;\r\n          }\r\n          if (updateState.complete !== undefined) {\r\n            updateComplete = updateState.complete;\r\n          }\r\n        });\r\n      } else {\r\n        console.error(\r\n          \"Update: Cannot track update state, no globalThis.update\"\r\n        );\r\n      }\r\n    }\r\n  });\r\n\r\n  onDestroy(() => {\r\n    document.body.removeEventListener(\"keydown\", keydownListener);\r\n  });\r\n  window.setMenu = setRoute;\r\n</script>\r\n\r\n{#key forceRerender}\r\n  <div id=\"menu\">\r\n    <div class=\"full-fill\">\r\n      <div class=\"decorative-border\">\r\n        {#if route == PLAY}\r\n          <div id=\"main-menu\">\r\n            <div id=\"main-menu-inner\">\r\n              <img\r\n                id=\"logo\"\r\n                src=\"ui/logo.png\"\r\n                alt=\"Spellmasons logo\"\r\n                width=\"800\"\r\n              />\r\n              {#if updateComplete}\r\n                <Pie {setRoute} {inGame} />\r\n              {:else}\r\n                <span>Update progress:</span>\r\n                <div class=\"progress\">\r\n                  <div\r\n                    style={`width:${Math.max(\r\n                      // Always give enough room to show the percentage text\r\n                      15,\r\n                      Math.floor(updateProgress * 100)\r\n                    )}%`}\r\n                  >\r\n                    {Math.floor(updateProgress * 100)}% &nbsp;\r\n                  </div>\r\n                </div>\r\n              {/if}\r\n            </div>\r\n          </div>\r\n        {:else if route == MULTIPLAYER_SERVER_CHOOSER}\r\n          <Multiplayer route />\r\n        {:else if route == LOCALIZATION}\r\n          <Localization route />\r\n        {:else if route == LOAD_GAMES}\r\n          <Load route {setRoute} />\r\n        {:else if route == OPTIONS}\r\n          <Options route {setRoute} />\r\n        {:else if route == CREDITS}\r\n          <Credits route />\r\n        {:else if route == HELP}\r\n          <Help route />\r\n        {:else if route == TODO}\r\n          <PageInProgress route />\r\n        {/if}\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/key}\r\n\r\n<style global lang=\"scss\">\r\n  body {\r\n    margin: 0;\r\n  }\r\n  #logo {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n  }\r\n  #menu {\r\n    color: white;\r\n    font-family: \"Playfair Display\", serif;\r\n  }\r\n  #main-menu {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #171717;\r\n  }\r\n  #main-menu-inner {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .progress {\r\n    height: 32px;\r\n    width: 250px;\r\n    appearance: none;\r\n    border-radius: 8px;\r\n    margin: 8px;\r\n    border: 1px solid #320573;\r\n  }\r\n  .progress > div {\r\n    background-image: -webkit-linear-gradient(left, #320573, #9717e3);\r\n    border-radius: 8px;\r\n    text-align: right;\r\n    line-height: 32px;\r\n    height: 32px;\r\n  }\r\n  #main-menu input {\r\n    font-family: inherit;\r\n    font-size: inherit;\r\n    -webkit-padding: 0.4em 0;\r\n    padding: 0.4em;\r\n    margin: 0 0 0.5em 0;\r\n    box-sizing: border-box;\r\n    border: 1px solid #ccc;\r\n    border-radius: 2px;\r\n    width: 100%;\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 250px;\r\n    font-family: sans-serif;\r\n  }\r\n  // ------------------------\r\n  .height100 {\r\n    height: 100%;\r\n  }\r\n  .overflowyscroll {\r\n    overflow-y: scroll;\r\n  }\r\n  .flex {\r\n    display: flex;\r\n  }\r\n  .flex-direction-column {\r\n    flex-direction: column;\r\n  }\r\n  .align-items-center {\r\n    align-items: center;\r\n  }\r\n  .gap-20 {\r\n    gap: 20px;\r\n  }\r\n  .gap-15 {\r\n    gap: 15px;\r\n  }\r\n  $button-purple: #483f8e;\r\n  // Remove default button styling\r\n  .button-wrapper {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    color: white;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 300px;\r\n  }\r\n  .button-wrapper.sm {\r\n    max-width: 120px;\r\n  }\r\n  .button-wrapper {\r\n    border: 16px solid;\r\n    border-image-outset: 0;\r\n    border-image-repeat: stretch;\r\n    border-image-slice: 250;\r\n    border-image-source: url(\"/ui/Assets_Icon_Border_QtrCircle_2_Purple.png\");\r\n    border-image-width: 1;\r\n    transition: 0.2s;\r\n    // Allow button to scale without blurring. Credit: https://stackoverflow.com/a/16878602/4418836\r\n    backface-visibility: hidden;\r\n    transform: translateZ(0);\r\n    -webkit-font-smoothing: subpixel-antialiased;\r\n    /* background-clip ensures that the background color wont overlap the border */\r\n    background-clip: padding-box;\r\n    background-color: $button-purple;\r\n  }\r\n  .button-wrapper.button-wrapper-bg-2 {\r\n    border-image-source: url(\"/ui/Assets_Icon_Border_QtrCircle_1_Purple.png\");\r\n  }\r\n  .button-wrapper.is-active,\r\n  .button-wrapper:hover {\r\n    filter: brightness(145%);\r\n  }\r\n\r\n  .button-wrapper div {\r\n    padding: 0 10px;\r\n  }\r\n\r\n  button:disabled {\r\n    color: #999;\r\n  }\r\n\r\n  button:focus {\r\n    border-color: #666;\r\n  }\r\n  .list {\r\n    gap: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 200px;\r\n  }\r\n  .full-fill {\r\n    width: 100vw;\r\n    height: 100vh;\r\n  }\r\n  .decorative-border {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 20px solid;\r\n    user-select: none;\r\n    border-image-source: url(\"/ui/Assets_Gif_Border.png\");\r\n    border-image-slice: 30;\r\n    border-image-width: 50px;\r\n    border-image-outset: 0;\r\n    box-sizing: border-box;\r\n    // background-color is necessary for this border on FF but it must not be set on Chrome\r\n    // background-color: #171717;\r\n  }\r\n  .pad-20 {\r\n    padding: 20px;\r\n  }\r\n</style>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\t// document.body is for devel, menu-inner is for when this is embedded in Spellmasons\r\n\ttarget: document.getElementById('menu-app') || document.body,\r\n\tprops: {}\r\n});\r\n\r\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","get_slot_context","definition","ctx","$$scope","slice","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set_data","wholeText","set_input_value","input","set_style","important","removeProperty","setProperty","toggle_class","toggle","classList","set_current_component","get_current_component","Error","onMount","on_mount","onDestroy","bubble","type","call","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","n","undefined","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","div","globalThis","i18n","create_if_block","class","button_class_value","button","span","t1","t1_value","iconPath","isActive","doLocalizeText","_class","tr","td0","td1","div2","aside","div0","main","div1","h20","table","tbody","p0","h21","p1","window","goBack","SAVE_PREFIX","div3","h1","each_blocks","localStorage","x","includes","split","join","reverse","load","saveFile","img","alt","width","each_value","explainKeys","div6","h10","div5","h11","h12","h13","div4","menuExplain","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","Math","max","current","align","OPTIONS","LOAD_GAMES","LOCALIZATION","CREDITS","HELP","PLAY","MULTIPLAYER_SERVER_CHOOSER","t_value","toLowerCase","td","entries","controlMap","h2","changeControl","code","activeKey","activeIndex","persistControls","forceRerender","setActive","keydownListener","console","error","mousedownListener","mouseButtonToKeyCode","mouseButton","$$invalidate","body","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","lobbyPlayerList","connected","isInRoom","isConnecting","syncConnectedWithPieState","_connected","isConnected","disconnect","pieDisconnect","label0","input0","label1","input1","storageGet","color","parseInt","toString","colorMagic","convertToHex","cssColor","sendConfig","configPlayer","$lobbyPlayerList","setTimeout","if_block","isElectron","create_if_block_2","label","volume","volumeMusic","volumeGame","input2","changeVolume","changeVolumeMusic","changeVolumeGame","skipTutorial","isTutorialComplete","AUDIO","VIDEO","PLAYER_CONFIG","CONTROLS","EXTRAS","button6","button6_isactive_value","button1_changes","button2_changes","button3_changes","button4_changes","ev","setRoute","optionsRoute","setOptionsRoute","_optionsRoute","cinematicCameraEnabled","storedZoom","NaN","STORAGE_ID_UI_ZOOM","parseFloat","zoomAmount","isNaN","setCinematicCameraEnabled","checked","resetTutorial","playNextSong","electronSettings","setFullscreen","requestFullscreen","catch","err","message","exitFullscreen","round","storageSet","setUIZoom","monitorFPS","toggleDevTools","promise","info","token","resolved","child_ctx","needs_flush","blocks","mount","hasCatch","pending","handle_promise","setupPixiPromise","isConnectedToSinglePlayer","player","lobbyReady","create_if_block_6","if_block1","create_if_block_5","br","if_block0","resumeGame","clientId","closeMenu","inGame","quicksave_exists","savePrefix","quicksaveKey","forceRerenderTutorialSkip","playMusic","startSingleplayer","confirm","URL","location","searchParams","history","pushState","exitCurrentGame","saveName","prompt","getItem","save","alert","fullyExitGame","button_changes","languages","getSupportedLanguages","currentLanguageCode","getChosenLanguageCode","setLanguage","td2","td3","t0","t0_value","t2","t2_value","t5","t5_value","thead","setInterval","clearInterval","intervalId","create_if_block_4","create_if_block_1","isJoining","urlSearchParams","URLSearchParams","search","wsUrl","get","gameName","joinRoomErrorText","connect","log","$isConnecting","connect_to_wsPie_server","reject","joinRoom","$isInRoom","e","pieLeaveRoom","floor","div0_style_value","route","updateInGameMenuStatus","refreshMenu","updateProgress","updateComplete","onUpdateCounter","_sender","updateState","progress","complete","setMenu","getElementById"],"mappings":"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"}