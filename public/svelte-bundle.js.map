{"version":3,"file":"svelte-bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Button.svelte","../../src/Credits.svelte","../../src/IconLink.svelte","../../src/Help.svelte","../../src/IconSlot.svelte","../../src/svg/globe.svelte","../../src/routes.js","../../src/KeyMapping.svelte","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../src/PlayerConfig.svelte","../../src/Options.svelte","../../src/Pie.svelte","../../src/Localization.svelte","../../src/PageInProgress.svelte","../../src/Lobby.svelte","../../src/Multiplayer.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\r\n    export let text;\r\n    export let isActive;\r\n    export let doLocalizeText = true;\r\n    let _class = \"\";\r\n    export { _class as class };\r\n</script>\r\n\r\n<button\r\n    class={`button-wrapper ${_class} ${isActive ? \"is-active\" : \"\"}`}\r\n    on:click\r\n    {...$$restProps}\r\n>\r\n    <div>{doLocalizeText ? globalThis.i18n(text) : text}</div>\r\n</button>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    const credits = [\r\n        [\"Jordan O'Leary\", \"Programming, Game Design, and Concept\"],\r\n        [\"theBlurryBox\", \"Art and Animation\"],\r\n        [\"Valentin Cochet\", \"@coc_val | Sound Effect Design\"],\r\n        [\"Jake O'Connell\", \"UI Design\"],\r\n        [\"BananaMilk\", \"Music\"],\r\n        [\"Lost Lumens, Brad Clark\", \"Audio Mastering\"],\r\n        [\"Matt Sweda\", \"Concept Ideation Assistance\"],\r\n    ];\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside class=\"flex flex-direction-column gap-15\">\r\n        <div class=\"flex align-items-center gap-15\">\r\n            <Button\r\n                on:click={() => window.goBack()}\r\n                type=\"button\"\r\n                text=\"🠔 Back\"\r\n                class=\"sm\"\r\n            />\r\n            <span> Credits </span>\r\n        </div>\r\n    </aside>\r\n    <main>\r\n        <table>\r\n            <tbody>\r\n                {#each credits as [name, did], i}\r\n                    <tr><td>{name}</td><td>{did}</td></tr>\r\n                {/each}\r\n            </tbody>\r\n        </table>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    div {\r\n        color: white;\r\n    }\r\n</style>\r\n","<script>\r\n    export let src;\r\n    export let alt;\r\n    export let href;\r\n    export let width;\r\n    export let isActive;\r\n    export let text = \"\";\r\n    let _class = \"\";\r\n    export { _class as class };\r\n</script>\r\n\r\n<a {href}>\r\n    <button\r\n        class={`button-wrapper ${_class} ${isActive ? \"is-active\" : \"\"}`}\r\n        on:click\r\n        {...$$restProps}\r\n    >\r\n        <div>\r\n            <img {src} {width} {alt} />\r\n            <span>{text}</span>\r\n        </div>\r\n    </button>\r\n</a>\r\n\r\n<style lang=\"scss\">\r\n    $button-purple: #483f8e;\r\n    button > div {\r\n        // Matches the .button-wrapper border-image\r\n        background-color: $button-purple;\r\n        height: 24px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    import IconLink from \"./IconLink.svelte\";\r\n</script>\r\n\r\n<div class=\"flex height100\">\r\n    <aside>\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"flex align-items-center gap-20\">\r\n                <Button\r\n                    on:click={() => window.goBack()}\r\n                    type=\"button\"\r\n                    text=\"🠔 Back\"\r\n                    class=\"sm\"\r\n                />\r\n                <h1 class=\"options-title\">{globalThis.i18n(\"Help\")}</h1>\r\n            </div>\r\n            <div class=\"flex flex-direction-column gap-15\">\r\n                <!-- <Button\r\n                    on:click={() => setOptionsRoute(AUDIO)}\r\n                    isActive={optionsRoute == AUDIO}\r\n                    type=\"button\"\r\n                    text=\"Audio\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(PLAYER_CONFIG)}\r\n                    isActive={optionsRoute == PLAYER_CONFIG}\r\n                    type=\"button\"\r\n                    text=\"Player Configuration\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(CONTROLS)}\r\n                    isActive={optionsRoute == CONTROLS}\r\n                    type=\"button\"\r\n                    text=\"Controls\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(EXTRAS)}\r\n                    isActive={optionsRoute == EXTRAS}\r\n                    type=\"button\"\r\n                    text=\"Extras\"\r\n                /> -->\r\n            </div>\r\n        </div>\r\n    </aside>\r\n\r\n    <main>\r\n        <div class=\"flex gap-15 height100\">\r\n            <div\r\n                class=\"pad-20 flex flex-direction-column gap-15 overflowyscroll\"\r\n                style=\"min-width:300px\"\r\n            >\r\n                <h1>Contact Me!</h1>\r\n                <IconLink\r\n                    src=\"ui/UI_Bird.png\"\r\n                    alt=\"Twitter @spellmasons\"\r\n                    width=\"24px\"\r\n                    href=\"https://twitter.com/spellmasons\"\r\n                    class=\"button-wrapper-bg-2\"\r\n                    text=\"@spellmasons\"\r\n                />\r\n                <h1>Join our Discord Community!</h1>\r\n                <IconLink\r\n                    src=\"ui/discord_logo.png\"\r\n                    alt=\"Spellmasons Discord https://discord.gg/q6sUCreHeJ\"\r\n                    width=\"24px\"\r\n                    href=\"https://discord.gg/q6sUCreHeJ\"\r\n                    class=\"button-wrapper-bg-2\"\r\n                    text=\"Discord\"\r\n                />\r\n                <h1>How to</h1>\r\n                {#each window.explainKeys || [] as name}\r\n                    <Button\r\n                        on:click={() => window.menuExplain(name, true)}\r\n                        type=\"button\"\r\n                        text={name}\r\n                    />\r\n                {/each}\r\n                <!-- {#if optionsRoute == AUDIO}\r\n                <div class=\"flex flex-direction-column gap-15\">\r\n                    Total Volume:\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volume * 100}\r\n                        on:input={changeVolume}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                    Music Volume:\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volumeMusic * 100}\r\n                        on:input={changeVolumeMusic}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                    Sound Effects Volume:\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volumeGame * 100}\r\n                        on:input={changeVolumeGame}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                </div>\r\n            {:else if optionsRoute == PLAYER_CONFIG}\r\n                <PlayerConfig  />\r\n            {:else if optionsRoute == CONTROLS}\r\n                <KeyMapping />\r\n            {:else if optionsRoute == EXTRAS}\r\n                <div>\r\n                    <Button\r\n                        on:click={() => {\r\n                            window.monitorFPS();\r\n                        }}\r\n                        text=\"Toggle FPS/Latency Monitor\"\r\n                    />\r\n                </div>\r\n            {/if} -->\r\n            </div>\r\n            <div id=\"explain-portal\" />\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    aside {\r\n        border-right: 2px solid #efefef;\r\n        width: 300px;\r\n    }\r\n    .options-title {\r\n        display: inline-block;\r\n    }\r\n    #explain-portal {\r\n        width: 100%;\r\n        height: 100vh;\r\n        display: flex;\r\n        align-content: center;\r\n    }\r\n</style>\r\n","<script>\r\n    export let isActive;\r\n    let _class = \"\";\r\n    export { _class as class };\r\n</script>\r\n\r\n<button\r\n    class={`button-wrapper ${_class} ${isActive ? \"is-active\" : \"\"}`}\r\n    on:click\r\n    {...$$restProps}\r\n>\r\n    <div>\r\n        <slot />\r\n    </div>\r\n</button>\r\n\r\n<style lang=\"scss\">\r\n    $button-purple: #483f8e;\r\n    button > div {\r\n        // Matches the .button-wrapper border-image\r\n        background-color: $button-purple;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n</style>\r\n","<svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"-1 0 67 66\"\r\n    labelledby=\"title\"\r\n    role=\"img\"\r\n    width=\"24px\"\r\n    height=\"24px\"\r\n>\r\n    <title id=\"title\">Language / Localization</title>\r\n    <defs>\r\n        <style>\r\n            .cls-1 {\r\n                stroke: #231f20;\r\n            }\r\n\r\n            .cls-1,\r\n            .cls-2 {\r\n                fill: none;\r\n                stroke-miterlimit: 10;\r\n            }\r\n\r\n            .cls-2 {\r\n                stroke: #fff;\r\n            }\r\n        </style>\r\n    </defs>\r\n    <g id=\"Layer_1\" data-name=\"Layer 1\">\r\n        <circle class=\"cls-2\" cx=\"32.5\" cy=\"32.5\" r=\"32\" />\r\n        <path class=\"cls-1\" d=\"M32.5,64.5v0Z\" />\r\n        <line class=\"cls-2\" x1=\".5\" y1=\"32.5\" x2=\"64.5\" y2=\"32.5\" />\r\n    </g>\r\n    <g id=\"Layer_2\" data-name=\"Layer 2\">\r\n        <path class=\"cls-2\" d=\"M32.5,64.5C-8.55,32.5,32.5,.5,32.5,.5\" />\r\n    </g>\r\n    <g id=\"Layer_3\" data-name=\"Layer 3\">\r\n        <path class=\"cls-2\" d=\"M32.5,.5s42.98,32,0,64\" />\r\n    </g>\r\n    <g id=\"Layer_4\" data-name=\"Layer 4\">\r\n        <path class=\"cls-2\" d=\"M11.22,8.49s21.28,13.57,42.6,.15\" />\r\n    </g>\r\n    <g id=\"Layer_5\" data-name=\"Layer 5\">\r\n        <path class=\"cls-2\" d=\"M11.22,56.56s21.28-13.27,42.6,0\" />\r\n    </g>\r\n    <g id=\"Layer_6\" data-name=\"Layer 6\">\r\n        <line class=\"cls-2\" x1=\"32.5\" y1=\".5\" x2=\"32.5\" y2=\"64.5\" />\r\n    </g>\r\n</svg>\r\n\r\n<style>\r\n    svg {\r\n        width: 24px;\r\n        stroke-width: 4px;\r\n    }\r\n</style>\r\n","export const OPTIONS = \"OPTIONS\";\r\nexport const LOCALIZATION = \"LOCALIZATION\";\r\nexport const CREDITS = \"CREDITS\";\r\nexport const HELP = \"HELP\";\r\nexport const PLAY = \"PLAY\";\r\nexport const MULTIPLAYER_SERVER_CHOOSER = \"MULTIPLAYER_SERVER_CHOOSER\";\r\nexport const LANGUAGE = \"LANGUAGE\";\r\nexport const TODO = \"TODO\";","<table id=\"keymapping\">\r\n    <tr>\r\n        <td> {globalThis.i18n(\"Clear Active Spell\")} </td>\r\n        <td>\r\n            <kbd class=\"hotkey-badge\">Esc</kbd>\r\n        </td>\r\n    </tr>\r\n    <tr id=\"center-cam-info\">\r\n        <td> {globalThis.i18n(\"Free Look\")} </td>\r\n        <td>\r\n            <kbd class=\"hotkey-badge\">W</kbd>\r\n            <kbd class=\"hotkey-badge\">A</kbd>\r\n            <kbd class=\"hotkey-badge\">S</kbd>\r\n            <kbd class=\"hotkey-badge\">D</kbd>\r\n            or Click and Drag Middle Mouse Button\r\n        </td>\r\n    </tr>\r\n    <tr id=\"center-cam-tooltip\">\r\n        <td> {globalThis.i18n(\"Camera Follow Player\")} </td>\r\n        <td>\r\n            <kbd class=\"hotkey-badge\">Z</kbd>\r\n        </td>\r\n    </tr>\r\n    <tr>\r\n        <td>{globalThis.i18n(\"Ping Location\")}</td>\r\n        <td>\r\n            <kbd class=\"hotkey-badge\">C</kbd>\r\n        </td>\r\n    </tr>\r\n    <tr>\r\n        <td> {globalThis.i18n(\"Toggle Menu\")} </td>\r\n        <td>\r\n            <kbd class=\"hotkey-badge\">Esc</kbd>\r\n        </td>\r\n    </tr>\r\n    <tr>\r\n        <td> {globalThis.i18n(\"Inventory\")} </td>\r\n        <td>\r\n            <kbd class=\"hotkey-badge\">Tab</kbd>\r\n            /\r\n            <kbd class=\"hotkey-badge\">i</kbd>\r\n        </td>\r\n    </tr>\r\n    <tr>\r\n        <td> {globalThis.i18n(\"View Walk Distance\")} </td>\r\n        <td>\r\n            <kbd class=\"hotkey-badge\">f</kbd>\r\n        </td>\r\n    </tr>\r\n</table>\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\r\n\r\nexport const isSinglePlayer = writable(false);\r\nexport const lobbyPlayerList = writable([]);\r\nexport const connected = writable(false);\r\nexport const isInRoom = writable(false);\r\nexport const isConnecting = writable(false);\r\nexport function syncConnectedWithPieState() {\r\n    const _connected = window.isConnected()\r\n    connected.set(_connected);\r\n    if (!_connected) {\r\n        isInRoom.set(false);\r\n    }\r\n    isConnecting.set(false);\r\n}\r\nexport function disconnect() {\r\n    return window.pieDisconnect().then(syncConnectedWithPieState);\r\n}","<script>\r\n    import { onMount } from \"svelte\";\r\n    import { lobbyPlayerList } from \"./stores\";\r\n    // storage ids from config.ts in Golems\r\n    let name = localStorage.getItem(\"player-name\");\r\n    let color = `#${parseInt(localStorage.getItem(\"player-color\")).toString(\r\n        16\r\n    )}`;\r\n    const convertToHex = (cssColor) => parseInt(cssColor.slice(1), 16);\r\n    function sendConfig(color, name) {\r\n        window.configPlayer({ color: convertToHex(color), name });\r\n        // Update lobbyPlayerList\r\n        $lobbyPlayerList = globalThis.lobbyPlayerList;\r\n    }\r\n    onMount(() => {\r\n        // Temporary work around, since all self messages are handled immediately,\r\n        // the config is being overwritten when underworld sends SYNC_PLAYERS due to\r\n        // onClientConnected even tho this messages is processed after so I'm adding\r\n        // a delay; however, the real solution is to update wsPie to add a flag that\r\n        // says sendToSelfThroughServer so it doesn't handle it immediately\r\n        setTimeout(() => {\r\n            sendConfig(color, name);\r\n        }, 200);\r\n    });\r\n</script>\r\n\r\n<div class=\"flex gap-15\">\r\n    <div class=\"flex flex-direction-column gap-15\">\r\n        <label for=\"player-name\">{globalThis.i18n(\"Player Name\")}</label>\r\n        <input\r\n            type=\"text\"\r\n            name=\"player-name\"\r\n            bind:value={name}\r\n            on:input={() => {\r\n                sendConfig(color, name);\r\n            }}\r\n        />\r\n    </div>\r\n    <div class=\"flex flex-direction-column gap-15\">\r\n        <label for=\"robe\">{globalThis.i18n(\"Robe Color\")}</label>\r\n        <input\r\n            type=\"color\"\r\n            name=\"robe\"\r\n            bind:value={color}\r\n            on:blur={() => {\r\n                sendConfig(color, name);\r\n            }}\r\n        />\r\n    </div>\r\n</div>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    import Icon from \"./IconSlot.svelte\";\r\n    import Globe from \"./svg/globe.svelte\";\r\n    export let setRoute;\r\n    import { LOCALIZATION } from \"./routes\";\r\n    import KeyMapping from \"./KeyMapping.svelte\";\r\n    const CONTROLS = \"KEY_MAPPING\";\r\n    const EXTRAS = \"EXTRAS\";\r\n    import PlayerConfig from \"./PlayerConfig.svelte\";\r\n    const PLAYER_CONFIG = \"PLAYER_CONFIG\";\r\n\r\n    const AUDIO = \"AUDIO\";\r\n    const VIDEO = \"VIDEO\";\r\n    let optionsRoute = AUDIO;\r\n    function setOptionsRoute(_optionsRoute) {\r\n        optionsRoute = _optionsRoute;\r\n    }\r\n    function changeVolume(ev) {\r\n        window.changeVolume(ev.target.value / 100);\r\n    }\r\n    function changeVolumeMusic(ev) {\r\n        window.changeVolumeMusic(ev.target.value / 100);\r\n    }\r\n    function changeVolumeGame(ev) {\r\n        window.changeVolumeGame(ev.target.value / 100);\r\n    }\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside>\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"flex align-items-center gap-20\">\r\n                <Button\r\n                    on:click={() => window.goBack()}\r\n                    type=\"button\"\r\n                    text=\"🠔 Back\"\r\n                    class=\"sm\"\r\n                />\r\n                <h1 class=\"options-title\">{globalThis.i18n(\"Settings\")}</h1>\r\n            </div>\r\n            <div class=\"flex flex-direction-column gap-15\">\r\n                <Button\r\n                    on:click={() => setOptionsRoute(AUDIO)}\r\n                    isActive={optionsRoute == AUDIO}\r\n                    type=\"button\"\r\n                    text=\"Audio\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(VIDEO)}\r\n                    isActive={optionsRoute == VIDEO}\r\n                    type=\"button\"\r\n                    text=\"Video\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(PLAYER_CONFIG)}\r\n                    isActive={optionsRoute == PLAYER_CONFIG}\r\n                    type=\"button\"\r\n                    text=\"Player Configuration\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(CONTROLS)}\r\n                    isActive={optionsRoute == CONTROLS}\r\n                    type=\"button\"\r\n                    text=\"Controls\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(EXTRAS)}\r\n                    isActive={optionsRoute == EXTRAS}\r\n                    type=\"button\"\r\n                    text=\"Extras\"\r\n                />\r\n                <Icon\r\n                    on:click={() => {\r\n                        setRoute(LOCALIZATION);\r\n                    }}\r\n                    class=\"button-wrapper-bg-2\"\r\n                >\r\n                    <Globe />\r\n                </Icon>\r\n            </div>\r\n        </div>\r\n    </aside>\r\n\r\n    <main>\r\n        <div class=\"pad-20\">\r\n            {#if optionsRoute == AUDIO}\r\n                <div class=\"flex flex-direction-column gap-15\">\r\n                    {globalThis.i18n(\"Total Volume\")}\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volume * 100}\r\n                        on:input={changeVolume}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                    {globalThis.i18n(\"Music Volume\")}\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volumeMusic * 100}\r\n                        on:input={changeVolumeMusic}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                    {globalThis.i18n(\"Sound Effects Volume\")}\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volumeGame * 100}\r\n                        on:input={changeVolumeGame}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                </div>\r\n            {:else if optionsRoute == VIDEO}\r\n                <div class=\"flex flex-direction-column gap-15\">\r\n                    <Button\r\n                        on:click={() => {\r\n                            if (!document.fullscreenElement) {\r\n                                document.body\r\n                                    .requestFullscreen()\r\n                                    .catch((err) => {\r\n                                        console.error(\r\n                                            `Error attempting to enable fullscreen mode: ${err.message} (${err.name})`\r\n                                        );\r\n                                    });\r\n                            } else {\r\n                                document.exitFullscreen();\r\n                            }\r\n                        }}\r\n                        text=\"Toggle Fullscreen\"\r\n                    />\r\n                </div>\r\n            {:else if optionsRoute == PLAYER_CONFIG}\r\n                <PlayerConfig />\r\n            {:else if optionsRoute == CONTROLS}\r\n                <KeyMapping />\r\n            {:else if optionsRoute == EXTRAS}\r\n                <div>\r\n                    <Button\r\n                        on:click={() => {\r\n                            window.monitorFPS();\r\n                        }}\r\n                        text=\"Toggle FPS / Latency Monitor\"\r\n                    />\r\n                </div>\r\n            {/if}\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    aside {\r\n        border-right: 2px solid #efefef;\r\n        width: 300px;\r\n    }\r\n    .options-title {\r\n        display: inline-block;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    import Icon from \"./IconSlot.svelte\";\r\n    import IconLink from \"./IconLink.svelte\";\r\n    import Globe from \"./svg/globe.svelte\";\r\n    import {\r\n        HELP,\r\n        CREDITS,\r\n        OPTIONS,\r\n        MULTIPLAYER_SERVER_CHOOSER,\r\n        LOCALIZATION,\r\n    } from \"./routes\";\r\n    import {\r\n        isSinglePlayer,\r\n        syncConnectedWithPieState,\r\n        disconnect,\r\n    } from \"./stores\";\r\n    export let setRoute;\r\n    export let inGame;\r\n    function chooseSingleplayer() {\r\n        // Start music on button click to get past Firefox permissions\r\n        window.playMusic();\r\n        $isSinglePlayer = true;\r\n        // Connect to solo\r\n        window.startSingleplayer().then(() => {\r\n            syncConnectedWithPieState();\r\n        });\r\n    }\r\n    function chooseMultiplayer() {\r\n        // Start music on button click to get past Firefox permissions\r\n        window.playMusic();\r\n        if ($isSinglePlayer) {\r\n            disconnect();\r\n        }\r\n        $isSinglePlayer = false;\r\n        setRoute(MULTIPLAYER_SERVER_CHOOSER);\r\n    }\r\n\r\n    function exitGame() {\r\n        const doQuit = confirm(\"Are you sure you want to quit to Main Menu?\");\r\n        if (doQuit) {\r\n            // Clear game and pieUrl searchParams on quit\r\n            const url = new URL(location.href);\r\n            url.searchParams.delete(\"game\");\r\n            url.searchParams.delete(\"pieUrl\");\r\n            window.history.pushState(null, null, url);\r\n            window.exitCurrentGame().then(syncConnectedWithPieState);\r\n        }\r\n    }\r\n    function resumeGame() {\r\n        window.closeMenu();\r\n    }\r\n    // function saveGame() {\r\n    //     const fileName = prompt(\"Name your save file\");\r\n    //     console.log(\"saving...\", fileName);\r\n    //     window.save(fileName);\r\n    // }\r\n</script>\r\n\r\n<div id=\"corner-left\" class=\"flex gap\" style=\"flex-direction:column;\">\r\n    <Button on:click={() => setRoute(HELP)} text=\"Help\" />\r\n</div>\r\n<div id=\"corner\" class=\"flex gap\" style=\"flex-direction:column;\">\r\n    <Button on:click={() => setRoute(CREDITS)} text=\"Credits\" />\r\n    <div class=\"flex gap\">\r\n        <IconLink\r\n            src=\"ui/UI_Bird.png\"\r\n            alt=\"Twitter @spellmasons\"\r\n            width=\"24px\"\r\n            href=\"https://twitter.com/spellmasons\"\r\n            class=\"button-wrapper-bg-2\"\r\n        />\r\n        <IconLink\r\n            src=\"ui/discord_logo.png\"\r\n            alt=\"Spellmasons Discord https://discord.gg/q6sUCreHeJ\"\r\n            width=\"24px\"\r\n            href=\"https://discord.gg/q6sUCreHeJ\"\r\n            class=\"button-wrapper-bg-2\"\r\n        />\r\n        <Icon\r\n            on:click={() => {\r\n                setRoute(LOCALIZATION);\r\n            }}\r\n            class=\"button-wrapper-bg-2\"\r\n        >\r\n            <Globe />\r\n        </Icon>\r\n        <!-- <Icon src=\"ui/UI_Bug.png\" alt=\"Report Issue or Bug\" /> -->\r\n    </div>\r\n</div>\r\n\r\n{#if inGame}\r\n    <div class=\"list\">\r\n        <Button on:click={resumeGame} text=\"Resume Game\" />\r\n        <Button on:click={() => setRoute(OPTIONS)} text=\"Settings\" />\r\n        <Button on:click={exitGame} text=\"Quit to Main Menu\" />\r\n    </div>\r\n{:else}\r\n    <div id=\"websocket-pie-connection-status\" />\r\n\r\n    {#await window.setupPixiPromise}\r\n        loading assets...\r\n    {:then}\r\n        <div class=\"list\">\r\n            <Button on:click={chooseSingleplayer} text=\"New Run\" />\r\n            <Button on:click={chooseMultiplayer} text=\"Multiplayer\" />\r\n            <Button on:click={() => setRoute(OPTIONS)} text=\"Settings\" />\r\n            <!-- <Button\r\n                on:click={() => {\r\n                    const affirm = prompt(\"Are you sure you want to quit?\");\r\n                    if (affirm) {\r\n                        // TODO: Implement exit\r\n                        // const remote = require('electron').remote;\r\n                        // var window = remote.getCurrentWindow();\r\n                        // window.close();\r\n                    }\r\n                }}\r\n                text=\"Quit Game\"\r\n            /> -->\r\n        </div>\r\n        <br />\r\n    {:catch}\r\n        <p style=\"color: red\">Something went wrong loading assets</p>\r\n    {/await}\r\n{/if}\r\n\r\n<style>\r\n    #corner {\r\n        position: absolute;\r\n        bottom: 22px;\r\n        right: 24px;\r\n    }\r\n    #corner-left {\r\n        position: absolute;\r\n        bottom: 22px;\r\n        left: 24px;\r\n    }\r\n    .gap {\r\n        gap: 15px;\r\n    }\r\n    .list {\r\n        display: flex;\r\n        flex-direction: column;\r\n        max-width: 200px;\r\n        margin: 0 auto;\r\n    }\r\n</style>\r\n","<script>\r\n    import { loop_guard } from \"svelte/internal\";\r\n    import { get } from \"svelte/store\";\r\n    import Button from \"./Button.svelte\";\r\n    import { isInRoom, isSinglePlayer } from \"./stores\";\r\n    const languages = globalThis.getSupportedLanguages();\r\n    let currentLanguageCode = globalThis.getChosenLanguageCode();\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside>\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"flex align-items-center gap-20\">\r\n                <Button\r\n                    on:click={() => window.goBack()}\r\n                    type=\"button\"\r\n                    text=\"🠔 Back\"\r\n                    class=\"sm\"\r\n                />\r\n                <h1 class=\"options-title\">{globalThis.i18n(\"Localization\")}</h1>\r\n            </div>\r\n        </div>\r\n    </aside>\r\n\r\n    <main>\r\n        <div class=\"pad-20 flex flex-direction-column gap-15\">\r\n            {#each languages as { language, code }, i}\r\n                <Button\r\n                    text={language}\r\n                    isActive={currentLanguageCode == code}\r\n                    doLocalizeText={false}\r\n                    on:click={() => {\r\n                        const confirmKey = \"confirm language change\";\r\n                        // Display confirmation both in current language and in chosen language\r\n                        const goAhead =\r\n                            get(isSinglePlayer) || get(isInRoom)\r\n                                ? confirm(`\r\n${globalThis.getTranslation(confirmKey, globalThis.getChosenLanguageCode())}\r\n${globalThis.getTranslation(confirmKey, code)}\r\n                            `)\r\n                                : true;\r\n                        if (goAhead) {\r\n                            globalThis.setLanguage(code, true);\r\n                            window.location.reload();\r\n                        }\r\n                    }}\r\n                />\r\n            {/each}\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    aside {\r\n        border-right: 2px solid #efefef;\r\n        width: 300px;\r\n    }\r\n    .options-title {\r\n        display: inline-block;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n</script>\r\n\r\n<h1>This page is still being built</h1>\r\n\r\n<Button\r\n    on:click={() => window.goBack()}\r\n    type=\"button\"\r\n    text=\"🠔 Back\"\r\n    class=\"sm\"\r\n/>\r\n\r\n<style>\r\n    h1 {\r\n        color: white;\r\n    }\r\n</style>\r\n","<script>\r\n    import { onMount, onDestroy } from \"svelte\";\r\n    import Button from \"./Button.svelte\";\r\n    import PlayerConfig from \"./PlayerConfig.svelte\";\r\n    import { lobbyPlayerList } from \"./stores\";\r\n    let intervalId;\r\n    onMount(() => {\r\n        setInterval(() => {\r\n            // Update lobbyPlayerList\r\n            $lobbyPlayerList = globalThis.lobbyPlayerList;\r\n        }, 500);\r\n    });\r\n    onDestroy(() => {\r\n        clearInterval(intervalId);\r\n    });\r\n</script>\r\n\r\n<h1>Game Lobby</h1>\r\n<PlayerConfig />\r\n<Button\r\n    on:click={() => {\r\n        globalThis.configPlayer({ lobbyReady: true });\r\n    }}\r\n    type=\"button\"\r\n    text=\"Ready\"\r\n    class=\"sm\"\r\n/>\r\n<table id=\"lobby-player-list\">\r\n    <thead>\r\n        <tr />\r\n    </thead>\r\n    <tbody>\r\n        {#each $lobbyPlayerList as { name, status, color, ready }}\r\n            <tr>\r\n                <td>{name}</td>\r\n                <td>{status}</td>\r\n                <td\r\n                    class=\"lobby-player-color\"\r\n                    style={`background-color:${color};`}\r\n                />\r\n                <td>\r\n                    {ready}\r\n                </td>\r\n            </tr>\r\n        {/each}\r\n    </tbody>\r\n</table>\r\n\r\n<style>\r\n    #lobby-player-list {\r\n        min-width: 500px;\r\n    }\r\n    .lobby-player-color {\r\n        width: 20px;\r\n        height: 18px;\r\n    }\r\n</style>\r\n","<script>\r\n    import { onMount } from \"svelte\";\r\n    import { get } from \"svelte/store\";\r\n    import Button from \"./Button.svelte\";\r\n    import Lobby from \"./Lobby.svelte\";\r\n    import {\r\n        isInRoom,\r\n        isConnecting,\r\n        connected,\r\n        syncConnectedWithPieState,\r\n        disconnect,\r\n    } from \"./stores\";\r\n    let isJoining = false;\r\n    let urlSearchParams = new URLSearchParams(location.search);\r\n    let wsUrl = urlSearchParams.get(\"pieUrl\");\r\n    let gameName = urlSearchParams.get(\"game\");\r\n\r\n    function connect() {\r\n        if (wsUrl) {\r\n            console.log(\"Menu: Connect to server\", wsUrl);\r\n            $isConnecting = true;\r\n            const url = new URL(location.href);\r\n            url.searchParams.set(\"pieUrl\", wsUrl);\r\n            window.history.pushState(null, null, url);\r\n            return window\r\n                .connect_to_wsPie_server(wsUrl)\r\n                .catch(console.error)\r\n                .then(syncConnectedWithPieState);\r\n        }\r\n        return Promise.reject(\"No wsUrl defined to connect to\");\r\n    }\r\n    function leaveRoom() {\r\n        window.pieLeaveRoom();\r\n        $isInRoom = false;\r\n    }\r\n    function join() {\r\n        if (gameName) {\r\n            if (window.isConnected()) {\r\n                // Note: Must not join a room until pixi is setup\r\n                console.log(\"Menu: Connect to game name\", gameName);\r\n                // Now that we are both connected to the pieServer and assets are loaded,\r\n                // we can host or join a game\r\n                isJoining = true;\r\n                // TODO: differentiate making room and joining room\r\n                window\r\n                    .joinRoom({ name: gameName })\r\n                    .then(() => {\r\n                        const url = new URL(location.href);\r\n                        url.searchParams.set(\"game\", gameName);\r\n                        window.history.pushState(null, null, url);\r\n                        $isInRoom = true;\r\n                    })\r\n                    .catch((e) => {\r\n                        console.error(\"Could not join room\", e);\r\n                    })\r\n                    .then(() => {\r\n                        isJoining = false;\r\n                    });\r\n            } else {\r\n                console.error(\r\n                    \"Cannot join room until pieClient is connected to a pieServer\"\r\n                );\r\n            }\r\n        } else {\r\n            console.log(\"Cannot join game until a gameName is provided\");\r\n        }\r\n    }\r\n    onMount(() => {\r\n        syncConnectedWithPieState();\r\n    });\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside>\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"flex align-items-center gap-20\">\r\n                <Button\r\n                    on:click={() => {\r\n                        const goAhead = get(connected)\r\n                            ? confirm(\r\n                                  globalThis.i18n(\r\n                                      \"Are you sure you want to disconnect from this server?\"\r\n                                  )\r\n                              )\r\n                            : true;\r\n                        if (goAhead) {\r\n                            disconnect().then(() => {\r\n                                window.goBack();\r\n                            });\r\n                        }\r\n                    }}\r\n                    type=\"button\"\r\n                    text=\"🠔 Back\"\r\n                    class=\"sm\"\r\n                />\r\n                <h1 class=\"options-title\">{globalThis.i18n(\"Multiplayer\")}</h1>\r\n            </div>\r\n        </div>\r\n    </aside>\r\n\r\n    <main>\r\n        <div class=\"pad-20\">\r\n            {globalThis.i18n(\"Server Url\")}\r\n            <div>\r\n                <input\r\n                    bind:value={wsUrl}\r\n                    on:keypress={(e) => {\r\n                        e.key == \"Enter\" && connect();\r\n                    }}\r\n                />\r\n                <div class=\"flex gap-15\">\r\n                    <Button\r\n                        on:click={connect}\r\n                        disabled={$connected}\r\n                        text=\"Connect\"\r\n                    />\r\n                    <Button\r\n                        on:click={disconnect}\r\n                        disabled={!$connected}\r\n                        text=\"Disconnect\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            {#if $isConnecting}\r\n                Connecting...\r\n                <div class=\"lds-ellipsis\">\r\n                    <div />\r\n                    <div />\r\n                    <div />\r\n                    <div />\r\n                </div>\r\n            {/if}\r\n            {#if $connected}\r\n                <p>Game name</p>\r\n                <input\r\n                    bind:value={gameName}\r\n                    on:keypress={(e) => {\r\n                        e.key == \"Enter\" && join();\r\n                    }}\r\n                />\r\n                {#if isJoining}\r\n                    Joining...\r\n                    <div class=\"lds-ellipsis\">\r\n                        <div />\r\n                        <div />\r\n                        <div />\r\n                        <div />\r\n                    </div>\r\n                {:else if $isInRoom}\r\n                    <Button on:click={leaveRoom} text=\"Leave Room\" />\r\n                {:else}\r\n                    <div style=\"display:flex;\">\r\n                        <Button on:click={join} text=\"Host\" />\r\n                        <Button on:click={join} text=\"Join\" />\r\n                    </div>\r\n                {/if}\r\n            {/if}\r\n            {#if $isInRoom}\r\n                <Lobby />\r\n            {/if}\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    input {\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        -webkit-padding: 0.4em 0;\r\n        padding: 0.4em;\r\n        margin: 0 0 0.5em 0;\r\n        box-sizing: border-box;\r\n        border: 1px solid #ccc;\r\n        border-radius: 2px;\r\n        width: 100%;\r\n    }\r\n    .lds-ellipsis {\r\n        display: inline-block;\r\n        position: relative;\r\n        width: 80px;\r\n        height: 80px;\r\n    }\r\n    .lds-ellipsis div {\r\n        position: absolute;\r\n        top: 33px;\r\n        width: 13px;\r\n        height: 13px;\r\n        border-radius: 50%;\r\n        background: #fff;\r\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n    }\r\n    .lds-ellipsis div:nth-child(1) {\r\n        left: 8px;\r\n        animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n    .lds-ellipsis div:nth-child(2) {\r\n        left: 8px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    .lds-ellipsis div:nth-child(3) {\r\n        left: 32px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    .lds-ellipsis div:nth-child(4) {\r\n        left: 56px;\r\n        animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n    @keyframes lds-ellipsis1 {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis3 {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n        100% {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis2 {\r\n        0% {\r\n            transform: translate(0, 0);\r\n        }\r\n        100% {\r\n            transform: translate(24px, 0);\r\n        }\r\n    }\r\n</style>\r\n","<script>\r\n  console.log(\"Menu: Svelte menu is running\");\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import Credits from \"./Credits.svelte\";\r\n  import Help from \"./Help.svelte\";\r\n  import Options from \"./Options.svelte\";\r\n  import Pie from \"./Pie.svelte\";\r\n  import Localization from \"./Localization.svelte\";\r\n  import PageInProgress from \"./PageInProgress.svelte\";\r\n  import {\r\n    PLAY,\r\n    OPTIONS,\r\n    CREDITS,\r\n    HELP,\r\n    TODO,\r\n    LOCALIZATION,\r\n    MULTIPLAYER_SERVER_CHOOSER,\r\n  } from \"./routes\";\r\n  import Multiplayer from \"./Multiplayer.svelte\";\r\n  let route;\r\n  let inGame = false;\r\n  window.updateInGameMenuStatus = () => {\r\n    inGame = window.player !== undefined;\r\n  };\r\n  setRoute(PLAY);\r\n  function setRoute(r) {\r\n    console.log(\"Menu: Route:\", r);\r\n    route = r;\r\n    window.updateInGameMenuStatus();\r\n  }\r\n  window.goBack = function goBack() {\r\n    setRoute(PLAY);\r\n  };\r\n  function keydownListener(event) {\r\n    switch (event.code) {\r\n      case \"Escape\":\r\n        goBack();\r\n        break;\r\n    }\r\n  }\r\n  onMount(() => {\r\n    document.body.addEventListener(\"keydown\", keydownListener);\r\n  });\r\n\r\n  onDestroy(() => {\r\n    document.body.removeEventListener(\"keydown\", keydownListener);\r\n  });\r\n  window.setMenu = setRoute;\r\n</script>\r\n\r\n<div id=\"menu\">\r\n  <div class=\"full-fill\">\r\n    <div class=\"decorative-border\">\r\n      {#if route == PLAY}\r\n        <div id=\"main-menu\">\r\n          <div id=\"main-menu-inner\">\r\n            <img\r\n              id=\"logo\"\r\n              src=\"ui/logo.png\"\r\n              alt=\"Spellmasons logo\"\r\n              width=\"800\"\r\n            />\r\n            <Pie {setRoute} {inGame} />\r\n          </div>\r\n        </div>\r\n      {:else if route == MULTIPLAYER_SERVER_CHOOSER}\r\n        <Multiplayer route />\r\n      {:else if route == LOCALIZATION}\r\n        <Localization route />\r\n      {:else if route == OPTIONS}\r\n        <Options route {setRoute} />\r\n      {:else if route == CREDITS}\r\n        <Credits route />\r\n      {:else if route == HELP}\r\n        <Help route />\r\n      {:else if route == TODO}\r\n        <PageInProgress route />\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style global lang=\"scss\">\r\n  body {\r\n    margin: 0;\r\n  }\r\n  #logo {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n  }\r\n  #menu {\r\n    color: white;\r\n    font-family: \"Playfair Display\", serif;\r\n  }\r\n  #main-menu {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #171717;\r\n  }\r\n  #main-menu input {\r\n    font-family: inherit;\r\n    font-size: inherit;\r\n    -webkit-padding: 0.4em 0;\r\n    padding: 0.4em;\r\n    margin: 0 0 0.5em 0;\r\n    box-sizing: border-box;\r\n    border: 1px solid #ccc;\r\n    border-radius: 2px;\r\n    width: 100%;\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 250px;\r\n    font-family: sans-serif;\r\n  }\r\n  // ------------------------\r\n  .height100 {\r\n    height: 100%;\r\n  }\r\n  .overflowyscroll {\r\n    overflow-y: scroll;\r\n  }\r\n  .flex {\r\n    display: flex;\r\n  }\r\n  .flex-direction-column {\r\n    flex-direction: column;\r\n  }\r\n  .align-items-center {\r\n    align-items: center;\r\n  }\r\n  .gap-20 {\r\n    gap: 20px;\r\n  }\r\n  .gap-15 {\r\n    gap: 15px;\r\n  }\r\n  $button-purple: #483f8e;\r\n  // Remove default button styling\r\n  .button-wrapper {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    color: white;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 300px;\r\n  }\r\n  .button-wrapper.sm {\r\n    max-width: 120px;\r\n  }\r\n  .button-wrapper {\r\n    border: 16px solid;\r\n    border-image-outset: 0;\r\n    border-image-repeat: stretch;\r\n    border-image-slice: 250;\r\n    border-image-source: url(\"/ui/Assets_Icon_Border_QtrCircle_2_Purple.png\");\r\n    border-image-width: 1;\r\n    transition: 0.2s;\r\n    // Allow button to scale without blurring. Credit: https://stackoverflow.com/a/16878602/4418836\r\n    backface-visibility: hidden;\r\n    transform: translateZ(0);\r\n    -webkit-font-smoothing: subpixel-antialiased;\r\n  }\r\n  .button-wrapper.button-wrapper-bg-2 {\r\n    border-image-source: url(\"/ui/Assets_Icon_Border_QtrCircle_1_Purple.png\");\r\n  }\r\n  .button-wrapper.is-active,\r\n  .button-wrapper:hover {\r\n    filter: brightness(145%);\r\n  }\r\n\r\n  .button-wrapper div {\r\n    // Matches the .button-wrapper border-image\r\n    background-color: $button-purple;\r\n    padding: 0 10px;\r\n  }\r\n\r\n  button:disabled {\r\n    color: #999;\r\n  }\r\n\r\n  button:focus {\r\n    border-color: #666;\r\n  }\r\n  .list {\r\n    gap: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 200px;\r\n  }\r\n  .full-fill {\r\n    width: 100vw;\r\n    height: 100vh;\r\n  }\r\n  .decorative-border {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 20px solid;\r\n    user-select: none;\r\n    border-image-source: url(\"/ui/Assets_Gif_Border.png\");\r\n    border-image-slice: 30;\r\n    border-image-width: 50px;\r\n    border-image-outset: 0;\r\n    box-sizing: border-box;\r\n    // background-color is necessary for this border on FF but it must not be set on Chrome\r\n    // background-color: #171717;\r\n  }\r\n  .pad-20 {\r\n    padding: 20px;\r\n  }\r\n</style>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\t// document.body is for devel, menu-inner is for when this is embedded in Spellmasons\r\n\ttarget: document.getElementById('menu-app') || document.body,\r\n\tprops: {}\r\n});\r\n\r\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","get_slot_context","definition","ctx","$$scope","slice","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set_data","wholeText","set_input_value","input","set_style","important","removeProperty","setProperty","toggle_class","toggle","classList","set_current_component","get_current_component","Error","onMount","on_mount","onDestroy","bubble","type","call","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","n","undefined","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","globalThis","i18n","class","button_class_value","button","div","t","t_value","isActive","doLocalizeText","_class","tr","td0","td1","div1","aside","div0","span","main","table","tbody","window","goBack","img","alt","width","each_value","explainKeys","div6","div2","h10","div5","div3","h11","h12","h13","div4","each_blocks","menuExplain","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","Math","max","current","svg","title","defs","g0","circle","path0","line0","g1","path1","g2","path2","g3","path3","g4","path4","g5","line1","OPTIONS","LOCALIZATION","CREDITS","HELP","PLAY","MULTIPLAYER_SERVER_CHOOSER","tr0","tr1","td2","td3","tr2","td4","td5","tr3","td6","td7","tr4","td8","td9","tr5","td10","td11","tr6","td12","td13","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","isSinglePlayer","lobbyPlayerList","connected","isInRoom","isConnecting","syncConnectedWithPieState","_connected","isConnected","disconnect","pieDisconnect","label0","input0","label1","input1","localStorage","getItem","color","parseInt","toString","sendConfig","cssColor","configPlayer","$lobbyPlayerList","setTimeout","volume","volumeMusic","volumeGame","input2","changeVolume","changeVolumeMusic","changeVolumeGame","AUDIO","VIDEO","PLAYER_CONFIG","CONTROLS","EXTRAS","h1","button1_changes","button2_changes","button3_changes","button4_changes","button5_changes","ev","setRoute","optionsRoute","setOptionsRoute","_optionsRoute","$$invalidate","fullscreenElement","exitFullscreen","body","requestFullscreen","catch","err","console","error","message","monitorFPS","promise","info","token","resolved","child_ctx","needs_flush","blocks","mount","hasCatch","pending","handle_promise","setupPixiPromise","resumeGame","br","closeMenu","inGame","playMusic","$isSinglePlayer","startSingleplayer","confirm","URL","location","searchParams","history","pushState","exitCurrentGame","getSupportedLanguages","getChosenLanguageCode","confirmKey","get","getTranslation","code","setLanguage","reload","t0","t0_value","t2","t2_value","t5","t5_value","thead","setInterval","clearInterval","intervalId","lobbyReady","create_if_block_4","create_if_block_1","create_if_block","isJoining","urlSearchParams","URLSearchParams","search","wsUrl","gameName","connect","log","$isConnecting","connect_to_wsPie_server","reject","join","joinRoom","$isInRoom","e","pieLeaveRoom","keydownListener","route","updateInGameMenuStatus","player","setMenu","getElementById"],"mappings":"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"}